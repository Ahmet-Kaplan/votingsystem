<%@ page contentType="text/html; charset=UTF-8" %>

<link href="${resourceURL}/polymer/polymer.html" rel="import"/>
<link href="${resourceURL}/vs-highcharts/highcharts-import.html" rel="import">
<link href="${resourceURL}/core-ajax/core-ajax.html" rel="import"/>

<polymer-element name="eventvs-election-stats" attributes="title eventVSId">
    <template>
        <style></style>
        <core-ajax id="ajax" auto url="{{url}}" handleAs="json" response="{{statsDto}}" method="get"
                   contentType="application/json" on-core-response="{{ajaxResponse}}"></core-ajax>
        <div hidden?="{{chartVisible}}" id="messageToUser" vertical layout center center-justified
             style="padding: 10px;font-weight: bold;">
            ${msg.withoutVotesLbl}
        </div>
        <div hidden?="{{!chartVisible}}" id="graphContainer" vertical layout center center-justified
             style="margin:0 0 0 10px; height: 150px; min-width: 250px;"></div>
    </template>
    <script>
        Polymer('eventvs-election-stats', {
            title:null,
            chartVisible:false,
            publish: {
                statsDto: {value: {}}
            },
            options: {
                chart: {
                    plotBackgroundColor: null,
                    spacingTop: 10,
                    spacingBottom: 30,
                    spacingRight: 30,
                    plotBorderWidth: 0
                },
                title: {
                    text: ''
                },
                tooltip: {
                    pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'
                },
                plotOptions: {
                    pie: {
                        allowPointSelect: true,
                        cursor: 'pointer',
                        dataLabels: {
                            enabled: false,
                            format: '<b>{point.name}</b>: {point.y} ${msg.votesLbl} - {point.percentage:.1f} %',
                            style: {
                                color: (Highcharts.theme && Highcharts.theme.contrastTextColor) || 'black'
                            }
                        }
                    }
                },
                series: [{
                    type: 'pie',
                    name: '${msg.votesLbl}',
                    data: [ ]
                }]
            },
            ready: function() {
                this.options.chart.renderTo = this.$.graphContainer
            },
            statsDtoChanged: function() {
                if(this.statsDto == null) return
                console.log(this.tagName + " - subject: " + this.statsDto.subject);
                var seriesData = []
                var numTotalVotes = 0
                Array.prototype.forEach.call(this.statsDto.fieldsEventVS, function(fieldEvent) {
                    seriesData.push([fieldEvent.content, fieldEvent.numVotesVS])
                    numTotalVotes += fieldEvent.numVotesVS
                });
                this.options.series[0].data = seriesData
                if(numTotalVotes > 0) {
                    var chart = new Highcharts.Chart(this.options);
                    this.chartVisible = true
                }
            },
            eventVSIdChanged: function() {
                this.chartVisible = false
                var targetURL = "${restURL}/eventVSElection/id/" + this.eventVSId + "/stats"
                console.log(this.tagName + "- targetURL: " + targetURL)
                this.$.ajax.url = targetURL
            }
        });
    </script>
</polymer-element>