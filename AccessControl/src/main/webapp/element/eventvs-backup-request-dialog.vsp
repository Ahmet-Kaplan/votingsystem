<%@ page contentType="text/html; charset=UTF-8" %>

<link href="${resourceURL}/polymer/polymer.html" rel="import"/>
<link href="${resourceURL}/core-icon-button/core-icon-button.html" rel="import"/>
<link href="${resourceURL}/paper-dialog/paper-dialog.html" rel="import"/>
<link href="${resourceURL}/paper-dialog/paper-dialog-transition.html" rel="import"/>


<polymer-element name="eventvs-backup-request-dialog" attributes="opened">
    <template>
        <paper-dialog id="xDialog" layered backdrop on-core-overlay-open="{{onCoreOverlayOpen}}">
            <style no-shim></style>
            <div id="container" layout vertical style="overflow-y: auto; width:450px; padding:10px;">
                <div layout horizontal center center-justified>
                    <div flex style="font-size: 1.5em; margin:5px 0px 10px 10px;font-weight: bold; color:#6c0404;">
                        <div style="text-align: center;">${msg.backupRequestCaption}</div>
                    </div>
                    <div style="position: absolute; top: 0px; right: 0px;">
                        <core-icon-button on-click="{{close}}" icon="close" style="fill:#6c0404; color:#6c0404;"></core-icon-button>
                    </div>
                </div>

                <div hidden?="{{!messageToUser}}">
                    <div class="messageToUser">
                        <div  layout horizontal center center-justified style="margin:0px 10px 0px 0px;">
                            <div id="messageToUser">{{messageToUser}}</div>
                        </div>
                        <paper-shadow z="1"></paper-shadow>
                    </div>
                </div>

                <p style="text-align: center;">
                    ${msg.backupRequestMsg}
                </p>
                <div  layout horizontal center center-justified  style="margin:10px 0px 10px 0px;">
                    <input type="email" class="form-control" id="eventBackupUserEmailText" style="width:360px;margin:0px auto 0px auto;"
                           placeholder="${msg.emailInputLbl}" title='${msg.enterEmailLbl}' required/>
                </div>

                <div layout horizontal style="margin:0px 20px 0px 0px;">
                    <div flex></div>
                    <div style="margin:10px 0px 10px 0px;">
                        <paper-button raised on-click="{{requestBackup}}" style="margin: 0px 0px 0px 5px;">
                            <i class="fa fa-check"></i> ${msg.acceptLbl}
                        </paper-button>
                    </div>
                </div>
            </div>
        </paper-dialog>
    </template>
    <script>
        Polymer('eventvs-backup-request-dialog', {
            publish: {
                eventvs: {value: {}}
            },
            ready: function() {
                console.log(this.tagName + " - ready")
            },
            onCoreOverlayOpen:function(e) {
                this.opened = this.$.xDialog.opened
            },
            openedChanged:function() {
                this.$.xDialog.opened = this.opened
                if(this.opened == false) this.close()
            },
            show: function(eventvs) {
                this.eventvs = eventvs
            },
            requestBackup: function() {
                this.messageToUser = null
                if(!this.$.eventBackupUserEmailText.validity.valid){
                    this.messageToUser = "${msg.formErrorMsg}"
                    return
                }
                var operationVS = new OperationVS(Operation.BACKUP_REQUEST)
                operationVS.serviceURL = "${restURL}/backupVS"
                operationVS.signedMessageSubject = '${msg.requestEventvsBackupMsgSubject}'
                operationVS.eventVS = this.eventvs
                operationVS.jsonStr = JSON.stringify(this.eventvs)
                operationVS.email = this.$.eventBackupUserEmailText.value
                operationVS.setCallback(function(appMessage) {
                    console.log("activateUserCallback - message: " + appMessage);
                    var appMessageJSON = toJSON(appMessage)
                    var caption = '${msg.operationERRORCaption}'
                    if(ResponseVS.SC_OK ==  appMessageJSON.statusCode) {
                        caption = '${msg.operationOKCaption}'
                        this.fire('backup-request-ok', appMessageJSON.message);
                        this.opened = false
                    }
                    showMessageVS(appMessageJSON.message, caption)
                }.bind(this))
                VotingSystemClient.setMessage(operationVS)
            },
            close: function() {
                this.opened = false
                this.messageToUser = null
            }
        });
    </script>
</polymer-element>
