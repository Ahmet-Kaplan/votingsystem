package org.sistemavotacion.test.panel;

import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JPanel;
import javax.swing.Timer;
import org.sistemavotacion.util.DateUtils;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

/**
 *
 * @author jgzornoza
 * How to Create a Digital Clock in Java - eHow.com http://www.ehow.com/how_6454498_create-digital-clock-java.html#ixzz1zdHpyZrS
 */
public class DigitalClockPanel extends JPanel implements ActionListener {
    
    private static Logger logger = LoggerFactory.getLogger(DigitalClockPanel.class);

    
    public enum Mode {TIME, STOPWATCH}
    private Mode mode;
    private SimpleDateFormat sdf;
    private Timer timer;
    private Long inicioMillis;
    /**
     * Creates new form DigitalClockPanel
     */
    public DigitalClockPanel() {
        initComponents();
         sdf = new SimpleDateFormat("HH:mm:ss");
    }
    
    public void start(Mode mode) {
        timeLabel.setText("00:00:00");
        inicioMillis = System.currentTimeMillis();
        this.mode = mode;
        //timeLabel.setFont(new Font("Dialog", Font.PLAIN, 24));
        // Set the timer to update the clock every 1000 milliseconds (1 seconds)
        timer = new Timer(1000, this);
        timer.setRepeats(true);
        timer.start();

    }
    public void stop() {
        logger.debug("Parando reloj");
        timer.stop();
    }
    
    
    @Override
    public void actionPerformed(ActionEvent ae) {
        if (ae.getSource().equals(timer)) {
            switch(mode) {
                case TIME:
                    timeLabel.setText(sdf.format(new Date(System.currentTimeMillis())));
                    break;
                case STOPWATCH:
                    timeLabel.setText(DateUtils.getElapsedTimeHoursMinutesFromMilliseconds(
                            System.currentTimeMillis() - inicioMillis));
                    break;
            }
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        timeLabel = new javax.swing.JLabel();

        setBackground(java.awt.Color.white);

        timeLabel.setText("00:00:00");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(timeLabel)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(timeLabel)
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel timeLabel;
    // End of variables declaration//GEN-END:variables
}
