package org.sistemavotacion.test.dialogo;

import java.awt.Color;
import java.awt.Frame;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;
import java.util.Set;
import javax.swing.JDialog;
import javax.swing.border.Border;
import javax.swing.border.LineBorder;
import net.miginfocom.swing.MigLayout;
import org.sistemavotacion.modelo.Evento;
import org.sistemavotacion.modelo.OpcionEvento;
import org.sistemavotacion.test.ContextoPruebas;
import org.sistemavotacion.test.KeyStoreHelper;
import org.sistemavotacion.test.panel.OpcionVotacionPanel;
import org.sistemavotacion.test.panel.VotacionesPanel;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

/**
* @author jgzornoza
* Licencia: https://github.com/jgzornoza/SistemaVotacion/blob/master/licencia.txt
*/
public class DatosSimulacionDialog extends JDialog implements KeyListener {

    private static Logger logger = LoggerFactory.getLogger(DatosSimulacionDialog.class);    
        
    private Evento evento = null;
    private Border normalTextBorder;
    private List<OpcionVotacionPanel> panelesOpciones = new ArrayList<OpcionVotacionPanel>();

    public DatosSimulacionDialog(Frame parent, boolean modal, Evento evento) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(null);
        this.evento = evento;
        if(evento != null) {
            asuntoConvocatoriaLabel.setText("<html><b>Asunto de la convocatoria: </b>"
                + evento.getAsunto() + "<html>");
        }
        numVotosTextField.addKeyListener(this);
        opcionesPanel.setVisible(false);
        tiempoPanel.setVisible(false);
        numVotosButtonGroup.add(votosAleatoriosRadioButton);
        numVotosButtonGroup.add(numVotosManualRadioButton);
        tiempoVotacionButtonGroup.add(tiempoMaquinaRadioButton);
        tiempoVotacionButtonGroup.add(introduccionManualTiempoRadioButton);
        normalTextBorder = numVotosTextField.getBorder();
        votosAleatoriosRadioButton.setSelected(true);
        tiempoMaquinaRadioButton.setSelected(true);
        opcionesPanel.setLayout(new MigLayout());
        List<OpcionEvento> opciones = evento.getOpciones();
        for(OpcionEvento opcion:opciones) {
            OpcionVotacionPanel opcionVotacionPanel = new OpcionVotacionPanel(opcion);
            opcionesPanel.add(opcionVotacionPanel, "wrap");
            panelesOpciones.add(opcionVotacionPanel);
        }
        validacionPanel.setVisible(false);
        if(ContextoPruebas.getNumeroTotalDeVotosParaLanzar() != null) {
            numVotosTextField.setText(ContextoPruebas.getNumeroTotalDeVotosParaLanzar().toString());
            if(ContextoPruebas.isVotacionAleatoria()) {
                votosAleatoriosRadioButton.setSelected(true);
            } else {
                numVotosManualRadioButton.setSelected(true);
                opcionesPanel.setVisible(true);
            }
            if(ContextoPruebas.isSimulacionConTiempos()) {
                introduccionManualTiempoRadioButton.setSelected(true);
                tiempoPanel.setVisible(true);
                horasComboBox.setSelectedIndex(ContextoPruebas.getHorasDuracionVotacion());
                minutosComboBox.setSelectedIndex(ContextoPruebas.getMinutosDuracionVotacion());
            } else {
                tiempoMaquinaRadioButton.setSelected(true);
            }
        }
        pack();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        numVotosButtonGroup = new javax.swing.ButtonGroup();
        tiempoVotacionButtonGroup = new javax.swing.ButtonGroup();
        asuntoConvocatoriaLabel = new javax.swing.JLabel();
        numVotodLabel = new javax.swing.JLabel();
        numVotosTextField = new javax.swing.JTextField();
        valorVotosPanel = new javax.swing.JPanel();
        votosAleatoriosRadioButton = new javax.swing.JRadioButton();
        opcionesPanel = new javax.swing.JPanel();
        numVotosManualRadioButton = new javax.swing.JRadioButton();
        tiempoVotacionPanel = new javax.swing.JPanel();
        tiempoMaquinaRadioButton = new javax.swing.JRadioButton();
        introduccionManualTiempoRadioButton = new javax.swing.JRadioButton();
        tiempoPanel = new javax.swing.JPanel();
        duracionSimulacionLabel = new javax.swing.JLabel();
        horasComboBox = new javax.swing.JComboBox();
        horasLabel = new javax.swing.JLabel();
        minutosComboBox = new javax.swing.JComboBox();
        minutosLabel = new javax.swing.JLabel();
        cerrarButton = new javax.swing.JButton();
        aceptarButton = new javax.swing.JButton();
        validacionPanel = new javax.swing.JPanel();
        mensajeValidacionLabel = new javax.swing.JLabel();
        closePanelLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Datos de la simulación");

        asuntoConvocatoriaLabel.setText(" ");

        numVotodLabel.setText("Número de votos a lanzar:");

        numVotosTextField.setText(" ");

        valorVotosPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        votosAleatoriosRadioButton.setText("Introducir el valor de los votos de forma aleatoria");
        votosAleatoriosRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                votosAleatoriosRadioButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout opcionesPanelLayout = new javax.swing.GroupLayout(opcionesPanel);
        opcionesPanel.setLayout(opcionesPanelLayout);
        opcionesPanelLayout.setHorizontalGroup(
            opcionesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        opcionesPanelLayout.setVerticalGroup(
            opcionesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 66, Short.MAX_VALUE)
        );

        numVotosManualRadioButton.setText("Especificar manualmente el número de votos de cada opción");
        numVotosManualRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                numVotosManualRadioButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout valorVotosPanelLayout = new javax.swing.GroupLayout(valorVotosPanel);
        valorVotosPanel.setLayout(valorVotosPanelLayout);
        valorVotosPanelLayout.setHorizontalGroup(
            valorVotosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(valorVotosPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(valorVotosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(opcionesPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(valorVotosPanelLayout.createSequentialGroup()
                        .addGroup(valorVotosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(votosAleatoriosRadioButton)
                            .addComponent(numVotosManualRadioButton))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        valorVotosPanelLayout.setVerticalGroup(
            valorVotosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(valorVotosPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(votosAleatoriosRadioButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(numVotosManualRadioButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(opcionesPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tiempoVotacionPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        tiempoMaquinaRadioButton.setText("Hacer la simulación a la velocidad que permita la máquina de pruebas");
        tiempoMaquinaRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tiempoMaquinaRadioButtonActionPerformed(evt);
            }
        });

        introduccionManualTiempoRadioButton.setText("Introducir manualmente el tiempo empleado en la simulación");
        introduccionManualTiempoRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                introduccionManualTiempoRadioButtonActionPerformed(evt);
            }
        });

        duracionSimulacionLabel.setText("Duración de la simulación:");

        horasComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23" }));

        horasLabel.setText("horas");

        minutosComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59" }));

        minutosLabel.setText("minutos");

        javax.swing.GroupLayout tiempoPanelLayout = new javax.swing.GroupLayout(tiempoPanel);
        tiempoPanel.setLayout(tiempoPanelLayout);
        tiempoPanelLayout.setHorizontalGroup(
            tiempoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tiempoPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(duracionSimulacionLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(horasComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(horasLabel)
                .addGap(18, 18, 18)
                .addComponent(minutosComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(minutosLabel)
                .addGap(0, 57, Short.MAX_VALUE))
        );
        tiempoPanelLayout.setVerticalGroup(
            tiempoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tiempoPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(tiempoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(duracionSimulacionLabel)
                    .addComponent(horasComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(horasLabel)
                    .addComponent(minutosComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(minutosLabel))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout tiempoVotacionPanelLayout = new javax.swing.GroupLayout(tiempoVotacionPanel);
        tiempoVotacionPanel.setLayout(tiempoVotacionPanelLayout);
        tiempoVotacionPanelLayout.setHorizontalGroup(
            tiempoVotacionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tiempoVotacionPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(tiempoVotacionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(tiempoMaquinaRadioButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(introduccionManualTiempoRadioButton)
                    .addComponent(tiempoPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        tiempoVotacionPanelLayout.setVerticalGroup(
            tiempoVotacionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tiempoVotacionPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tiempoMaquinaRadioButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(introduccionManualTiempoRadioButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(tiempoPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        cerrarButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/cancel_16x16.png"))); // NOI18N
        cerrarButton.setText("Cerrar");
        cerrarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cerrarButtonActionPerformed(evt);
            }
        });

        aceptarButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/accept_16x16.png"))); // NOI18N
        aceptarButton.setText("Aceptar");
        aceptarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aceptarButtonActionPerformed(evt);
            }
        });

        validacionPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        mensajeValidacionLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        closePanelLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/close.gif"))); // NOI18N
        closePanelLabel.setText(" ");
        closePanelLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                closePanelLabelcloseMensajeUsuario(evt);
            }
        });

        javax.swing.GroupLayout validacionPanelLayout = new javax.swing.GroupLayout(validacionPanel);
        validacionPanel.setLayout(validacionPanelLayout);
        validacionPanelLayout.setHorizontalGroup(
            validacionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(validacionPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(mensajeValidacionLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 380, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(closePanelLabel))
        );
        validacionPanelLayout.setVerticalGroup(
            validacionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mensajeValidacionLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 43, Short.MAX_VALUE)
            .addGroup(validacionPanelLayout.createSequentialGroup()
                .addComponent(closePanelLabel)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(asuntoConvocatoriaLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(valorVotosPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(tiempoVotacionPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(numVotodLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(numVotosTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(aceptarButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cerrarButton))
                    .addComponent(validacionPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(validacionPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(asuntoConvocatoriaLabel)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(numVotodLabel)
                    .addComponent(numVotosTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(valorVotosPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tiempoVotacionPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cerrarButton)
                    .addComponent(aceptarButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void votosAleatoriosRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_votosAleatoriosRadioButtonActionPerformed
        opcionesPanel.setVisible(false);
        pack();
    }//GEN-LAST:event_votosAleatoriosRadioButtonActionPerformed

    private void introduccionManualTiempoRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_introduccionManualTiempoRadioButtonActionPerformed
        tiempoPanel.setVisible(true);
        pack();
    }//GEN-LAST:event_introduccionManualTiempoRadioButtonActionPerformed

    private void numVotosManualRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_numVotosManualRadioButtonActionPerformed
        opcionesPanel.setVisible(true);
        pack();
    }//GEN-LAST:event_numVotosManualRadioButtonActionPerformed

    private void cerrarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cerrarButtonActionPerformed
        dispose();
    }//GEN-LAST:event_cerrarButtonActionPerformed

    private void tiempoMaquinaRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tiempoMaquinaRadioButtonActionPerformed
        tiempoPanel.setVisible(false);
        pack();
    }//GEN-LAST:event_tiempoMaquinaRadioButtonActionPerformed

    private void closePanelLabelcloseMensajeUsuario(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_closePanelLabelcloseMensajeUsuario
        mostrarMensajeUsuario(null);
        pack();
    }//GEN-LAST:event_closePanelLabelcloseMensajeUsuario

    private void aceptarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aceptarButtonActionPerformed
        if(!validarFormulario()) return;
        ContextoPruebas.setNumeroTotalDeVotosParaLanzar(new Integer(numVotosTextField.getText().trim()));
        ContextoPruebas.setVotacionAleatoria(votosAleatoriosRadioButton.isSelected());
        ContextoPruebas.setSimulacionConTiempos(introduccionManualTiempoRadioButton.isSelected());
        if(numVotosManualRadioButton.isSelected()) {
            List<OpcionEvento> opciones = new ArrayList<OpcionEvento>();
            for(OpcionVotacionPanel opcionVotacionPanel : panelesOpciones) {
                OpcionEvento opcion = opcionVotacionPanel.getOpcion();
                opciones.add(opcion);
            }
            evento.setOpciones(opciones);
        }
        if(introduccionManualTiempoRadioButton.isSelected()) {
            ContextoPruebas.setHorasDuracionVotacion(horasComboBox.getSelectedIndex());
            ContextoPruebas.setMinutosDuracionVotacion(minutosComboBox.getSelectedIndex());
        }
        logger.debug("Hora: " + ContextoPruebas.getHorasDuracionVotacion() + 
                " - Minuto: " + ContextoPruebas.getMinutosDuracionVotacion());
        ContextoPruebas.setEvento(evento);
        VotacionesPanel.INSTANCIA.prepararPanelParaLanzarSimulacion();
        dispose();
    }//GEN-LAST:event_aceptarButtonActionPerformed

    public boolean validarFormulario() {
        boolean errores = false;
        opcionesPanel.setBorder(normalTextBorder);
        tiempoPanel.setBorder(normalTextBorder);
        numVotosTextField.setBorder(normalTextBorder);
        Integer numTotalVotos = null;
        if (numVotosTextField.getText() == null ||
                "".equals(numVotosTextField.getText().trim())) {
            mensajeValidacionLabel.setText("<html>El campo no puede ir vacío</html>");
            numVotosTextField.setBorder(new LineBorder(Color.RED,2));
            errores = true;
        } else if (numVotosTextField.getText().trim().length() > 0) {
            try{
                numTotalVotos = new Integer(numVotosTextField.getText().trim());
            } catch (Exception ex) {
                mensajeValidacionLabel.setText("<html>El valor debe ser numérico</html>");
                numVotosTextField.setBorder(new LineBorder(Color.RED,2));
                errores = true;
            }
        }
        if(numVotosManualRadioButton.isSelected()) {
            Integer sumaVotosOpciones = 0;
            for(OpcionVotacionPanel opcionVotacionPanel : panelesOpciones) {
                OpcionEvento opcion = opcionVotacionPanel.getOpcion();
                if(opcion == null) {
                    errores = true;
                    opcionVotacionPanel.setError(true);
                    mensajeValidacionLabel.setText(opcionVotacionPanel.getMensajeError());
                    break;
                } else {
                    opcionVotacionPanel.setError(false);
                    sumaVotosOpciones += opcion.getNumeroVotos();
                }
            }
            if(numTotalVotos!= null && 
                    sumaVotosOpciones.intValue() != numTotalVotos.intValue()) {
                errores = true;
                mensajeValidacionLabel.setText("La suma de votos de las opciones no coincide con el total");
                numVotosTextField.setBorder(new LineBorder(Color.RED,2));
            }
        }
        validacionPanel.setVisible(errores);
        pack();
        return !errores;
    }
        
        
    public void mostrarMensajeUsuario(String mensaje) {
        if(mensaje == null) {
            validacionPanel.setVisible(false);
        }else {
            mensajeValidacionLabel.setText(mensaje);
            validacionPanel.setVisible(true);
        }
        pack();
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DatosSimulacionDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DatosSimulacionDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DatosSimulacionDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DatosSimulacionDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the dialog
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                DatosSimulacionDialog dialog = new DatosSimulacionDialog(new javax.swing.JFrame(), true, null);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton aceptarButton;
    private javax.swing.JLabel asuntoConvocatoriaLabel;
    private javax.swing.JButton cerrarButton;
    private javax.swing.JLabel closePanelLabel;
    private javax.swing.JLabel duracionSimulacionLabel;
    private javax.swing.JComboBox horasComboBox;
    private javax.swing.JLabel horasLabel;
    private javax.swing.JRadioButton introduccionManualTiempoRadioButton;
    private javax.swing.JLabel mensajeValidacionLabel;
    private javax.swing.JComboBox minutosComboBox;
    private javax.swing.JLabel minutosLabel;
    private javax.swing.JLabel numVotodLabel;
    private javax.swing.ButtonGroup numVotosButtonGroup;
    private javax.swing.JRadioButton numVotosManualRadioButton;
    private javax.swing.JTextField numVotosTextField;
    private javax.swing.JPanel opcionesPanel;
    private javax.swing.JRadioButton tiempoMaquinaRadioButton;
    private javax.swing.JPanel tiempoPanel;
    private javax.swing.ButtonGroup tiempoVotacionButtonGroup;
    private javax.swing.JPanel tiempoVotacionPanel;
    private javax.swing.JPanel validacionPanel;
    private javax.swing.JPanel valorVotosPanel;
    private javax.swing.JRadioButton votosAleatoriosRadioButton;
    // End of variables declaration//GEN-END:variables

    
    @Override
    public void keyTyped(KeyEvent ke) { }

    @Override
    public void keyPressed(KeyEvent ke) {
        int key = ke.getKeyCode();
        if (key == KeyEvent.VK_ENTER) {
            Toolkit.getDefaultToolkit().beep();
            aceptarButton.doClick();
        }
    }

    @Override
    public void keyReleased(KeyEvent ke) { }
    
}
