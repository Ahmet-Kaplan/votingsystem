<%@ page contentType="text/html; charset=UTF-8" %>
<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core"%>
<%@ taglib prefix="h" uri="http://java.sun.com/jsf/html" %>
<%@ taglib prefix="f" uri="http://java.sun.com/jsf/core" %>


<link href="${resourceURL}/polymer/polymer.html" rel="import"/>
<link href="${resourceURL}/paper-fab/paper-fab.html" rel="import"/>
<link href="${resourceURL}/core-signals/core-signals.html" rel="import"/>
<link href="${resourceURL}/core-animated-pages/core-animated-pages.html" rel="import"/>
<link href="${resourceURL}/paper-button/paper-button.html" rel="import"/>
<link href="${resourceURL}/core-item/core-item.html" rel="import"/>
<link href="${resourceURL}/core-selector/core-selector.html" rel="import"/>
<link href="${resourceURL}/paper-dropdown-menu/paper-dropdown-menu.html" rel="import"/>
<link href="${resourceURL}/paper-dropdown/paper-dropdown.html" rel="import"/>
<link href="${resourceURL}/core-menu/core-menu.html" rel="import"/>
<link href="${elementURL}/transactionVS/transactionvs-form.vsp" rel="import"/>
<link href="${elementURL}/userVS/uservs-list.vsp" rel="import"/>
<link href="${elementURL}/groupVS/groupvs-user.vsp" rel="import"/>

<polymer-element name="groupvs-details" attributes="selectedItem subpage">
<template>
    <style shim-shadowdom>
        body /deep/ paper-dropdown-menu.narrow { max-width: 200px; width: 300px; }
        .optionsIcon {margin:0 5px 0 2px; color:#6c0404;}
        .colored { color: #6c0404; }
    </style>
    <link href="${contextURL}/resources/css/currency.css" media="all" rel="stylesheet" />
    <link href="${resourceURL}/font-awesome/css/font-awesome.min.css" media="all" rel="stylesheet" />
    <core-signals on-core-signal-messagedialog-accept="{{messagedialogAccepted}}" on-core-signal-messagedialog-closed="{{messagedialogClosed}}"
                  on-core-signal-uservs-selected="{{showUserDetails}}" ></core-signals>
    <core-animated-pages id="pages" flex selected="{{page}}" on-core-animated-pages-transition-end="{{transitionend}}"
         transitions="cross-fade-all">
    <section id="page1">
    <div cross-fade style="max-width: 900px; margin:0 auto;">
        <div vertical layout flex>
            <div id="messagePanel" class="messagePanel messageContent text-center" style="font-size: 1.4em;display:none;">
            </div>
            <div hidden?="{{!isAdminView || !isClientToolConnected}}">
                <div layout horizontal center center-justified>
                    <div layout horizontal center center-justified>
                        <i class="fa fa-cogs optionsIcon"></i>
                        <paper-dropdown-menu halign="right" style="width: 200px;"
                                     label="${msg.configGroupvsLbl}" on-core-select="{{configGroup}}">
                            <paper-dropdown class="dropdown colored" transition="">
                                <core-menu id="configGroupCoreMenu">
                                    <paper-item id="editDataItem">${msg.editDataLbl}</paper-item>
                                    <paper-item id="cancelGroupVSItem">${msg.cancelGroupVSLbl}</paper-item>
                                </core-menu>
                            </paper-dropdown>
                        </paper-dropdown-menu>
                    </div>

                    <div layout horizontal center center-justified style="margin:0 0 0 60px;">
                        <i class="fa fa-money optionsIcon"></i>
                        <paper-dropdown-menu label="${msg.makeTransactionVSFromGroupVSLbl}"
                                 on-core-select="{{showTransactionVSDialog}}" style="width: 300px;">
                            <paper-dropdown class="dropdown colored"  transition="">
                                <core-menu id="transactionvsCoreMenu">
                                    <paper-item id="fromGroupToMember">${msg.makeTransactionVSFromGroupVSToMemberLbl}</paper-item>
                                    <paper-item id="fromGroupToMemberGroup">${msg.makeTransactionVSFromGroupVSToMemberGroupLbl}</paper-item>
                                    <paper-item id="fromGroupToAllMember">${msg.makeTransactionVSFromGroupVSToAllMembersLbl}</paper-item>
                                </core-menu>
                            </paper-dropdown>
                        </paper-dropdown-menu>
                    </div>
                </div>
            </div>

            <template if="{{isUserView}}">
                <div layout horizontal center center-justified style="margin:0 0 10px 10px; font-size: 0.9em;">
                    <paper-button raised style="margin:0 20px 0 0;" on-click="{{subscribeToGroup}}">
                        <i class="fa fa-sign-in"></i> ${msg.subscribeGroupVSLbl}
                    </paper-button raised>
                    <paper-button raised style="margin:0 20px 0 0;" on-click="{{makeTransactionVS}}">
                        <i class="fa fa-money"></i> ${msg.makeTransactionVSLbl}
                    </paper-button raised>
                </div>
            </template>
            <template if="{{!isClientToolConnected}}">
                <div id="clientToolMsg" class="text-center" style="color:#6c0404; font-size: 1.2em;margin:30px 0 20px 0;">
                    <f:view>
                        <h:outputFormat value="#{msg.clientToolNeededMsg}" escape="false">
                            <f:param value="#{contextURL}/tools/ClientTool.zip"/>
                        </h:outputFormat>
                        <br/>
                        <h:outputFormat value="#{msg.clientToolDownloadMsg}" escape="false">
                            <f:param value="#{contextURL}/app/tools.xhtml"/>
                        </h:outputFormat>
                    </f:view>
                </div>
            </template>
            <div id="pageHeader" layout horizontal center center-justified>
                <div horizontal layout flex style="padding:7px 0px 0px 7px;">
                    <template if="{{subpage}}">
                        <div style="margin: 10px 20px 10px 0;" title="${msg.backLbl}" >
                            <paper-fab mini icon="arrow-back" on-click="{{back}}" style="color: white;"></paper-fab>
                        </div>
                    </template>
                    <template if="{{groupvs.tags.length > 0}}">
                        <div layout horizontal center center-justified>
                            <i class="fa fa-tag" style="color:#888; margin: 0 10px 0 0;"></i>
                            <template repeat="{{tag in groupvs.tags}}">
                                <a class="btn btn-default" style="font-size: 0.7em;
                                margin:0px 5px 0px 0px;padding:3px;">{{tag.name}}</a>
                            </template>
                        </div>
                    </template>
                </div>
                <div style="font-size: 1.5em; margin:5px 0 0 0;font-weight: bold; color:#6c0404;">
                    <div style="text-align: center;" groupvsId-data="{{groupvs.id}}">{{groupvs.name}}</div>
                </div>
                <div flex style="margin:5px 10px 0 0; font-size: 0.7em; color:#888; text-align: right; vertical-align: bottom;">
                    <b>${msg.IBANLbl}: </b>{{groupvs.iban}}
                </div>
            </div>
        </div>
        <div class="eventContentDiv" style="">
            <vs-html-echo html="{{groupvs.description}}"></vs-html-echo>
        </div>

        <div layout horizontal>
            <div class="linkVS" style="margin: 5px 0 0 0;" on-click="{{goToWeekBalance}}">
                <i class="fa fa-bar-chart"></i> ${msg.goToWeekBalanceLbl}
            </div>
            <div flex></div>
            <div style="margin:5px 10px 0 0; font-size: 0.9em; color:#888;">
                <b>${msg.representativeLbl}: </b>{{groupvs.representative.firstName}} {{groupvs.representative.lastName}}
            </div>
        </div>

        <div style="min-height: 300px; border-top: 1px solid #ccc; margin: 15px 0 0 0; padding: 10px 0 0 0;">
            <div  style="text-align:center; font-size: 1.3em;font-weight: bold; color: #888;margin: 0 0 10px 0;
                text-decoration: underline;">
                ${msg.usersLbl}
            </div>

            <div id="userList" style="margin: 0 0 100px 0;">
                <uservs-list id="userList"></uservs-list>
            </div>

        </div>
    </div>
    </section>

    <section id="page2">
        <div cross-fade>
            <transactionvs-form id="transactionvsForm" subpage></transactionvs-form>
        </div>
    </section>
    </core-animated-pages>

    <groupvs-user id="userDescription"></groupvs-user>
</template>
<script>
    Polymer('groupvs-details', {
        isSelected: false,
        subpage:false,
        publish: { groupvs: {} },
        isClientToolConnected:false,
        ready : function() {
            console.log(this.tagName + " - ready - subpage: " + this.subpage)
            //this.isClientToolConnected = window['isClientToolConnected']
            this.isClientToolConnected = true
            this.$.transactionvsForm.addEventListener('operation-finished', function (e) {
                this.page = 0;
            }.bind(this))
        },
        makeTransactionVS:function() {
            console.log(this.tagName + " - makeTransactionVS")
            this.$.transactionvsForm.init(Operation.FROM_USERVS, this.groupvs.name, this.groupvs.iban ,
                    this.groupvs.id)
            this.page = 1;
        },
        messagedialogAccepted:function(e, detail, sender) {
            console.log(this.tagName + ".messagedialogAccepted")
            if('cancel_group' == detail.callerId) {
                var webAppMessage = new WebAppMessage(Operation.CURRENCY_GROUP_CANCEL)
                webAppMessage.serviceURL = "${restURL}/groupVS/cancel/" + this.groupvs.id
                webAppMessage.signedMessageSubject = "${msg.cancelGroupVSSignedMessageSubject}"
                webAppMessage.signedContent = {operation:Operation.CURRENCY_GROUP_CANCEL, name:this.groupvs.name,
                    id:this.groupvs.id}
                webAppMessage.contentType = 'application/pkcs7-signature'
                webAppMessage.setCallback(function(appMessage) {
                    this.appMessageJSON = JSON.parse(appMessage)
                    var caption = '${msg.groupCancelERRORLbl}'
                    if(ResponseVS.SC_OK == this.appMessageJSON.statusCode) {
                        caption = "${msg.groupCancelOKLbl}"
                        loadURL_VS("${restURL}/groupVS/" + this.groupvs.id)
                    }
                    showMessageVS(this.appMessageJSON.message, caption, this.tagName)
                }.bind(this))
                VotingSystemClient.setMessage(webAppMessage);
                this.appMessageJSON = null
            }
        },
        goToWeekBalance:function() {
            loadURL_VS("${restURL}/balance/userVS/id/" + this.groupvs.id)
        },
        messagedialogClosed:function(e) {
            console.log("messagedialog signal - messagedialogClosed: " + e)
            if(this.tagName == e) {
                if(this.appMessageJSON != null && ResponseVS.SC_OK == this.appMessageJSON.statusCode) {
                    window.location.href = updateMenuLink(this.appMessageJSON.URL)
                }
            }
        },
        subscribeToGroup: function () {
            console.log("subscribeToGroup")
            var groupvsRepresentative = {id:this.groupvs.representative.id, nif:this.groupvs.representative.nif}
            var groupVSData = {id:this.groupvs.id, name:this.groupvs.name , representative:groupvsRepresentative}
            var webAppMessage = new WebAppMessage(Operation.CURRENCY_GROUP_SUBSCRIBE)
            webAppMessage.serviceURL = "${restURL}/groupVS/id/" + this.groupvs.id + "/subscribe"
            webAppMessage.signedMessageSubject = "${msg.subscribeToCurrencyGroupMsg}"
            webAppMessage.signedContent = {operation:Operation.CURRENCY_GROUP_SUBSCRIBE, groupvs:groupVSData}
            webAppMessage.contentType = 'application/pkcs7-signature'
            webAppMessage.setCallback(function(appMessage) {
                console.log("subscribeToGroupCallback - message: " + appMessage);
                var appMessageJSON = JSON.parse(appMessage)
                var caption
                if(ResponseVS.SC_OK == appMessageJSON.statusCode) {
                    caption = "${msg.groupSubscriptionOKLbl}"
                    loadURL_VS( "${restURL}/groupVS/" + this.groupvs.id)
                } else caption = '${msg.groupSubscriptionERRORLbl}'
                var msg = appMessageJSON.message
                showMessageVS(msg, caption)
            }.bind(this))
            VotingSystemClient.setMessage(webAppMessage);
        },
        groupvsChanged:function() {
            console.log(this.tagName + " - groupvsChanged - groupvs: " + JSON.stringify(this.groupvs))
            if(("admin" == menuType || "superuser" == menuType) && 'ACTIVE' == this.groupvs.state) this.isAdminView = true
            else {
                this.isAdminView = false
                if("user" == menuType && 'ACTIVE' == this.groupvs.state) this.isUserView = true
                else this.isUserView = false
            }
            if('ACTIVE' == this.groupvs.state) {
                this.$.messagePanel.style.display = 'none'
            } else if('PENDING' == this.groupvs.state) {
                this.$.pageHeader.style.color = "#fba131"
                this.$.messagePanel.classList.add("groupvsPendingBox");
                this.$.messagePanel.innerHTML = "${msg.groupvsPendingLbl}"
                this.$.messagePanel.style.display = 'block'
            } else if('CANCELED' == this.groupvs.state) {
                this.$.pageHeader.style.color = "#6c0404"
                this.$.messagePanel.classList.add("groupvsClosedBox");
                this.$.messagePanel.innerHTML = "${msg.groupvsClosedLbl}"
                this.$.messagePanel.style.display = 'block'
                this.isAdminView = false
            }
            this.$.userList.url = "${restURL}/groupVS/id/" + this.groupvs.id + "/listUsers"
            this.fire('core-signal', {name: "vs-innerpage", data: {caption:"${msg.groupvsLbl}"}});
            console.log("this.isUserView: " + this.isUserView + " - groupvs.state: " + this.groupvs.state +
                " - menuType: " + menuType)
        },
        configGroup:function(e, details) {
            //e.detail.isSelected = false
            if('cancelGroupVSItem' == e.detail.item.id) {
                showMessageVS("${msg.cancelGroupVSDialogMsg}".format(this.groupvs.name),
                        "${msg.confirmOperationMsg}", 'cancel_group', true)
            } else if('editDataItem' == e.detail.item.id) {
                window.location.href = "${restURL}/groupVS/edit?menu=admin&id=" +
                        this.groupvs.id
            }
            this.$.configGroupCoreMenu.selected = null
        },
        showTransactionVSDialog:function(e) {
            console.log("showTransactionVSDialog")
            //e.detail.isSelected
            if('fromGroupToMember' == e.detail.item.id) {
                this.$.transactionvsForm.init(Operation.FROM_GROUP_TO_MEMBER, this.groupvs.name,
                        this.groupvs.iban , this.groupvs.id)
            } else if('fromGroupToMemberGroup' == e.detail.item.id) {
                this.$.transactionvsForm.init(Operation.FROM_GROUP_TO_MEMBER_GROUP, this.groupvs.name,
                        this.groupvs.iban, this.groupvs.id)
            } else if('fromGroupToAllMember' == e.detail.item.id) {
                this.$.transactionvsForm.init(Operation.FROM_GROUP_TO_ALL_MEMBERS, this.groupvs.name,
                        this.groupvs.iban, this.groupvs.id)
            }
            this.page = 1;
            this.$.transactionvsCoreMenu.selected = null
        },

        back:function() {
            this.fire('core-signal', {name: "groupvs-details-closed", data: this.groupvs.id});
        },
        showUserDetails:function(e, detail, sender) {
            console.log(this.tagName + " - showUserDetails")
            this.$.userDescription.show("${restURL}/groupVS/id/" + this.groupvs.id + "/user/id", detail)
        }
    })
</script>
</polymer-element>
