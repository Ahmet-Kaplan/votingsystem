<%@ page contentType="text/html; charset=UTF-8" %>

<link href="${resourceURL}/polymer/polymer.html" rel="import"/>
<link href="${resourceURL}/paper-button/paper-button.html" rel="import"/>
<link href="${resourceURL}/core-tooltip/core-tooltip.html" rel="import"/>

<polymer-element name="message-smime-transactionvs" attributes="smimeMessageContent smimeMessage timeStampDate">
    <template>
        <link href="${contextURL}/resources/css/currency.css" media="all" rel="stylesheet" />
        <link href="${resourceURL}/font-awesome/css/font-awesome.min.css" media="all" rel="stylesheet" />
        <style>
        .messageToUser {
            font-weight: bold;
            margin:10px auto 10px auto;
            background: #f9f9f9;
            padding:10px 20px 10px 20px;
        }
        .actorLbl {font-size: 1.2em; text-decoration: underline;font-weight: bold; color: #621; }
        .timeStampMsg { color:#aaaaaa; font-size:1em; margin:0 0 15px 0;font-style:italic; }
        .iban-link {text-decoration: underline; color: #0000ee; cursor: pointer;}
        </style>
        <div layout horizontal>
            <div layout vertical style="margin: 0px auto; color: #667;">
                <div horizontal layout style="margin: 0 0 10px 0; min-width: 400px;">
                    <div layout horizontal center center-justified style="margin: 3px 0 0 0;">
                        <a class="btn btn-default" style="font-size: 0.7em; height: 0.8em;">
                            <i class="fa fa-tag" style="color: #888;"></i> {{smimeMessageContent.tags[0]}}</a>
                    </div>
                    <div layout horizontal center center-justified class="pageHeader" style="margin:0 0 0 20px; font-size: 1.2em;">
                        {{messageType}}
                    </div>
                    <div flex horizontal layout end-justified style="margin:10px 0px 10px 0px; font-size: 0.9em;">
                        <template if="{{isClientToolConnected}}">
                            <paper-button raised on-click="{{checkReceipt}}">
                                <i class="fa fa-certificate"></i>  ${msg.checkSignatureLbl}
                            </paper-button>
                        </template>
                    </div>
                </div>

                <div hidden?="{{!timeStampDate}}" class="timeStampMsg" style="text-align: center;">
                    <b>${msg.dateLbl}: </b> {{timeStampDate}}
                </div>
                <div hidden?="{{!messageToUser}}" layout horizontal center center-justified  class="messageToUser">
                    <div>
                        <div id="messageToUser">{{messageToUser}}</div>
                    </div>
                    <paper-shadow z="1"></paper-shadow>
                </div>
                <div horizontal layout center center-justified style="margin:0 0 10px 0;">
                    <div style="font-size: 1.1em; font-weight: bold;">${msg.subjectLbl}:</div>
                    <div style="font-size: 1.2em; ">{{smimeMessageContent.subject}}</div>
                </div>
                <div horizontal layout center-justified>
                    <div style="font-size: 1.1em;"><b>${msg.amountLbl}: </b>
                        {{smimeMessageContent.amount}} {{smimeMessageContent.currencyCode}}</div>
                    <div hidden?="{{!smimeMessageContent.timeLimited}}">
                        <core-tooltip large label="${msg.timeLimitedDateMsg} '{{smimeMessageContent.validTo}}'" position="left">
                            <div class="pageHeader" style="margin: 0 20px 0 0;"><b>
                                ${msg.timeLimitedLbl}</b>
                            </div>
                        </core-tooltip>
                    </div>
                </div>
                <div style="margin-left: 20px;">
                    <div class="actorLbl" style=" margin:10px 0px 0px 0px;">${msg.senderLbl}</div>
                    <div>
                        <div><b>${msg.nameLbl}:  </b>{{smimeMessageContent.fromUser}}</div>
                        <div horizontal layout on-click="{{showFromUserVSByIBAN}}">
                            <div><b>${msg.IBANLbl}: </b></div>
                            <div  class="iban-link">{{smimeMessageContent.fromUserIBAN}}</div>
                        </div>
                    </div>
                </div>
                <div hidden?="{{!isReceptorVisible}}" style="margin:20px 0px 0px 20px;">
                    <div class="actorLbl">${msg.receptorLbl}</div>
                    <div layout horizontal>
                        <div><b>${msg.IBANLbl}: </b></div>
                        <div layout vertical>
                            <template repeat="{{IBAN in smimeMessageContent.toUserIBAN}}">
                                <div on-click="{{showToUserVSByIBAN}}" class="iban-link">{{IBAN}}</div>
                            </template>
                        </div>
                    </div>
                </div >
            </div>
        </div>

    </template>
    <script>
        Polymer('message-smime-transactionvs', {
            publish: {
                smimeMessageContent: {value: {}}
            },
            isClientToolConnected:window['isClientToolConnected'],
            messageToUser:null,
            timeStampDate:null,
            isReceptorVisible:false,
            messageType:null,
            fromUserIBAN:null,
            toUserIBAN:null,
            ready: function() {
                console.log(this.tagName + " - ready")
                document.querySelector("#voting_system_page").addEventListener('votingsystem-client-connected', function() {
                    this.isClientToolConnected = true
                }.bind(this))
            },
            smimeMessageContentChanged:function() {
                this.messageToUser = null
                console.log(this.tagName + " - smimeMessageContentChanged: " + JSON.stringify(this.smimeMessageContent))
                switch (this.smimeMessageContent.type) {
                    case 'FROM_GROUP_TO_ALL_MEMBERS':
                        this.messageType = "${msg.transactionVSFromGroupToAllMembers}"
                        this.fromUserIBAN = this.smimeMessageContent.fromUserIBAN
                        break;
                    default: return tagName
                }
                sendSignalVS({caption:this.messageType})
            },
            showFromUserVSByIBAN:function(e) {
                loadURL_VS("${restURL}/userVS/IBAN/" + this.fromUserIBAN, '_blank')
            },
            showToUserVSByIBAN:function(e) {
                loadURL_VS("${restURL}/userVS/IBAN/" + this.toUserIBAN, '_blank')
            },
            checkReceipt: function() {
                var operationVS = new OperationVS(Operation.OPEN_SMIME)
                operationVS.message = this.smimeMessage
                operationVS.setCallback(function(appMessage) {
                    console.log("saveReceiptCallback - message: " + appMessage);
                }.bind(this))
                VotingSystemClient.setMessage(operationVS);
            }
        });
    </script>
</polymer-element>
