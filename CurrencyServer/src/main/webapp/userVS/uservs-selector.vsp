<%@ page contentType="text/html; charset=UTF-8" %>

<link href="${resourceURL}/iron-localstorage/iron-localstorage.html" rel="import"/>

<dom-module name="uservs-selector" attributes="url contactSelector groupVSId">
    <template>
        <link href="${contextURL}/resources/css/currency.css" media="all" rel="stylesheet" />
        <link href="${resourceURL}/font-awesome/css/font-awesome.min.css" media="all" rel="stylesheet" />
        <style>
            .card {
                width: 290px; vertical-align: top;
                background-color: #f9f9f9; box-shadow: 0 5px 5px 0 rgba(0, 0, 0, 0.24);
                border: 1px solid rgba(0, 0, 0, 0.24); margin: 10px; color: #667; cursor: pointer; padding: 5px;
            }
            .nif {font-size: 0.7em; color:#888;margin:5px 0 0 0; }
            .name {color: #000; font-size: 0.9em;}
        </style>
        <iron-ajax id="ajax" url="{{url}}" last-response="{{responseData}}" handle-as="json" method="get" content-type="application/json"></iron-ajax>
        <div class="vertical layout center">
            <div hidden="{{!modeSearch}}" class="horizontal layout" style="width: 100%;">
                <div class="layout horizontal center center-justified flex" style="margin:0px auto 0px auto;">
                    <input value="{{textToSearch}}" type="text" style="width:200px;" class="form-control"
                           placeholder="${msg.userSearchLbl}" on-keypress="{{searchInputKeyPress}}">
                </div>
                <div hidden="{{!contactSelector}}">
                    <button on-click="toggleContactsView" style="font-size: 1.1em;margin: 0px 10px 0px 5px;" data-button="contacts">
                        <i class="fa fa-users"></i> ${msg.contactsLbl}
                    </button>
                </div>
            </div>
            <div hidden="{{modeSearch}}" class="horizontal layout center center-justified" style="width: 100%;">
                <div class="flex" style="font-size: 1.5em; font-weight: bold; color: #6c0404; text-align: center;">${msg.storeContactsLbl}</div>
                <div>
                    <button on-click="toggleContactsView" style="font-size: 1.1em;margin:10px 0px 10px 10px; display: block;" data-button="userSearch">
                        <i class="fa fa-search"></i> ${msg.searchLbl}
                    </button>
                </div>
            </div>
            <div class="horizontal layout wrap around-justified">
                <template repeat="{{uservs in resultList}}">
                    <div class="card" style="display: block;">
                        <div class="horizontal layout" on-click="showUserDetails">
                            <div class="layout flex vertical center-justified">
                                <div class="name">{{uservs.name}}</div>
                                <div class="name" style="margin: 5px 0 0 0;">{{uservs.lastName}}</div>
                            </div>
                            <div>
                                <div hidden="{{isContactButtonHidden(uservs)}}">
                                    <button on-click="toggleContact" style="font-size: 0.7em; margin:0 0 0 0;">
                                        {{modeSearch? '${msg.addContactLbl}':'${msg.removeContactLbl}'}}
                                    </button>
                                </div>
                                <div class="nif flex horizontal layout center center-justified">{{uservs.nif}}</div>
                            </div>
                        </div>
                    </div>
                </template>
            </div>
            <div hidden="{{responseData.resultList.length !== 0}}"  class="center" id="emptySearchMsg" style="margin:30px 0 30px 0; font-weight: bold;">
                ${msg.emptyUserSearchResultMsg}
            </div>
            <iron-localstorage id="localstorage" name="contacts-localstorage" value="{{contacts}}"
                   on-load="{{contactsChanged}}"></iron-localstorage>
        </div>
    </template>
    <script>
        Polymer({
            is:'uservs-selector',
            contactsArray:[],
            publish: {
                contactSelector: true
            },
            ready: function() {
                this.url = this.url || ''
                this.resultList = []
                this.modeSearch = !this.contactSelector
                console.log(this.tagName + " - contactSelector: " + this.contactSelector)
            },
            modeSearchChanged:function(e) {
                console.log(this.tagName + " modeSearchChanged - modeSearch: " + this.modeSearch)
                if(this.modeSearch === true) {
                    this.textToSearch = ""
                    this.resultList = []
                } else this.resultList = toJSON(this.contacts)
            },
            contactsChanged:function(e) {
                console.log(this.tagName + " - contactsChanged")
                this.contactsArray = toJSON(this.contacts)
                if(this.contactSelector && !this.modeSearch) this.resultList = this.contactsArray
            },
            showUserDetails:function(e) {
                document.querySelector("#voting_system_page").dispatchEvent(
                        new CustomEvent('user-clicked', { 'detail': e.model.item }));
                this.fire('iron-signal', {name: "user-clicked", data: e.model.item});
            },
            reset: function() {
                this.resultList = []
            },
            responseDataChanged: function() {
                console.log(this.tagName + " - responseDataReceived - num. users: " + this.responseData.resultList.length)
                this.resultList = this.responseData.resultList
            },
            contactsArrayChanged: function(e) {
                this.contacts = JSON.stringify(this.contactsArray)
            },
            toggleContact: function(event, detail, target) {
                var uservs = e.model.item
                if(this.modeSearch == true) {
                    console.log("toggleContact - addContact")
                    if(!this.isContact(uservs)) this.contactsArray.push(uservs)
                    target.style.display = 'none'
                } else {
                    console.log("toggleContact - removeContact")
                    var result = []
                    for(uservsIdx in this.contactsArray) {
                        if(this.contactsArray[uservsIdx].id !== uservs.id) result.push(this.contactsArray[uservsIdx])
                    }
                    this.contacts = JSON.stringify(result)
                }
                event.stopPropagation()
            },
            isContact:function (uservs){
                var isInArray = false
                for(uservsIdx in this.contactsArray) {
                    if(this.contactsArray[uservsIdx].id === uservs.id) return true
                }
                return isInArray
            },
            isContactButtonHidden:function (uservs){
                if(this.modeSearch && this.contactSelector) {
                    if(this.isContact(uservs)) return true
                    else return false
                } else if(this.contactSelector) return false
                else return true
            },
            searchInputKeyPress:function (e){
                var chCode = ('charCode' in e) ? e.charCode : e.keyCode;
                if (chCode == 13) this.processSearch()
            },
            processSearch:function() {
                if(this.textToSearch.trim() === "") return
                if(this.groupVSId) this.url = "${restURL}/groupVS/id/" + this.groupVSId + "/searchUsers?searchText=" + this.textToSearch
                else this.url = "${restURL}/userVS/search?searchText=" + this.textToSearch
                console.log(this.tagName + " - processSearch - url: " + this.url)
                this.$.ajax.generateRequest()
            },
            toggleContactsView:function(event, detail, target) {
                if("contacts" === target.attributes['data-button'].value) this.modeSearch = false
                else  this.modeSearch = true
            }
        });
    </script>
</dom-module>