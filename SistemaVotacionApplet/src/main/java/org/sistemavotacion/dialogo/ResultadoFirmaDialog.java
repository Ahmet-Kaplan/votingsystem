package org.sistemavotacion.dialogo;

import java.awt.Frame;
import java.io.File;
import javax.swing.JFileChooser;
import org.sistemavotacion.modelo.Respuesta;
import org.sistemavotacion.util.FileUtils;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

/**
* @author jgzornoza
* Licencia: https://github.com/jgzornoza/SistemaVotacion/wiki/Licencia
*/
public class ResultadoFirmaDialog extends javax.swing.JDialog {

    private static Logger logger = 
            LoggerFactory.getLogger(ResultadoFirmaDialog.class);

    private Respuesta respuesta;
    private Frame parentFrame;
    private String savedFilePath = "";
    private File recibo = null;

    public ResultadoFirmaDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        this.parentFrame = parent;
        this.setLocationRelativeTo(null);
        guardarReciboButton.setVisible(false);
    }

    public void mostrarMensaje(Respuesta respuesta) {
        logger.debug("- mostrarMensaje:" + respuesta.getOperacion().getTipo().getCaption());
    	setTitle(respuesta.getOperacion().getTipo().getCaption() + " - Resultado de la operación");
        this.respuesta = respuesta;
        if(respuesta.getOperacion().isRespuestaConRecibo()) {
            guardarReciboButton.setVisible(true);
            recibo = FileUtils.getFileFromString(respuesta.getMensaje());
            mensajeLabel.setText("Si lo desea puede guardar el recibo de la respuesta");
        } else {
            mensajeLabel.setText(ResultadoFirmaDialog.obtenerMensajeEnvioFirmaOk(respuesta.getMensaje()));
        }
        mensajeLabel.setVisible(true);
        pack();
        this.setVisible(true);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        contenedorPanel = new javax.swing.JPanel();
        mensajeLabel = new javax.swing.JLabel();
        guardarReciboButton = new javax.swing.JButton();
        guardarFirmaEnviadaButton = new javax.swing.JButton();
        cerrarButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        contenedorPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        mensajeLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        mensajeLabel.setText(" ");

        guardarReciboButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/images/filesave_16x16.png"))); // NOI18N
        guardarReciboButton.setText("Guardar recibo de respuesta");
        guardarReciboButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardarReciboButtonActionPerformed(evt);
            }
        });

        guardarFirmaEnviadaButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/images/filesave_16x16.png"))); // NOI18N
        guardarFirmaEnviadaButton.setText("Guardar documento firmado enviado");
        guardarFirmaEnviadaButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardarFirmaEnviadaButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout contenedorPanelLayout = new javax.swing.GroupLayout(contenedorPanel);
        contenedorPanel.setLayout(contenedorPanelLayout);
        contenedorPanelLayout.setHorizontalGroup(
            contenedorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(contenedorPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(contenedorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(contenedorPanelLayout.createSequentialGroup()
                        .addComponent(mensajeLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(16, 16, 16))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, contenedorPanelLayout.createSequentialGroup()
                        .addGroup(contenedorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(guardarFirmaEnviadaButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 598, Short.MAX_VALUE)
                            .addComponent(guardarReciboButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap())))
        );
        contenedorPanelLayout.setVerticalGroup(
            contenedorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(contenedorPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(mensajeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(guardarReciboButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(guardarFirmaEnviadaButton, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        cerrarButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/images/cancel_16x16.png"))); // NOI18N
        cerrarButton.setText("Cerrar");
        cerrarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cerrarButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(contenedorPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(cerrarButton)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(contenedorPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cerrarButton)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void guardarFirmaEnviadaButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardarFirmaEnviadaButtonActionPerformed
        try {
            final JFileChooser chooser = new JFileChooser();
            File documentoEnviado = respuesta.getArchivo();
            File copia = new File(System.getProperty("user.home")  + File.separator + documentoEnviado.getName());
            chooser.setSelectedFile(copia);
            int returnVal = chooser.showSaveDialog(parentFrame);
            if (returnVal == JFileChooser.APPROVE_OPTION) {
                File file = chooser.getSelectedFile();
                savedFilePath = file.getAbsolutePath();
                logger.debug("Ruta recibo: " + savedFilePath);
                if (file != null) {
                    documentoEnviado.renameTo(file);
                } else {
                    mensajeLabel.setText("La ruta seleccionada no es válida");
                }
            }
            documentoEnviado.delete();
        } catch (Exception ex) {
            logger.error(ex.getMessage(), ex);
        }
    }//GEN-LAST:event_guardarFirmaEnviadaButtonActionPerformed

    private void cerrarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cerrarButtonActionPerformed
        this.dispose();
    }//GEN-LAST:event_cerrarButtonActionPerformed

    private void guardarReciboButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardarReciboButtonActionPerformed
        try {
            final JFileChooser chooser = new JFileChooser();
            File copia = new File(System.getProperty("user.home")  + File.separator + recibo.getName());
            chooser.setSelectedFile(copia);
            int returnVal = chooser.showSaveDialog(parentFrame);
            if (returnVal == JFileChooser.APPROVE_OPTION) {
                File file = chooser.getSelectedFile();
                savedFilePath = file.getAbsolutePath();
                logger.debug("Ruta recibo: " + savedFilePath);
                if (file != null) {
                    recibo.renameTo(file);
                } else {
                    mensajeLabel.setText("La ruta seleccionada no es válida");
                }
            }
            recibo.delete();
        } catch (Exception ex) {
            logger.error(ex.getMessage(), ex);
        }
    }//GEN-LAST:event_guardarReciboButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ResultadoFirmaDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ResultadoFirmaDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ResultadoFirmaDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ResultadoFirmaDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the dialog
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                final ResultadoFirmaDialog dialog = new ResultadoFirmaDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        dialog.dispose();
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cerrarButton;
    private javax.swing.JPanel contenedorPanel;
    private javax.swing.JButton guardarFirmaEnviadaButton;
    private javax.swing.JButton guardarReciboButton;
    private javax.swing.JLabel mensajeLabel;
    // End of variables declaration//GEN-END:variables

   
     
    public static String obtenerMensajeEnvioFirmaOk (String mensajeRespuesta) {
        if(mensajeRespuesta == null || "".equals(mensajeRespuesta))
            return "<html>Firma enviada con éxito</html>";
        else {
            String resultado = null;
            if(mensajeRespuesta.length() > 100) resultado = mensajeRespuesta.substring(0, 300) + "...";
            else resultado = mensajeRespuesta;
            return "<html>" + resultado + "</html>";
        } 
    }
    
    public static String obtenerMensajeEventoGuardado () {
        return "<html>La copia del recibo se ha guardado en:<br/>";
    }
    
 
}
