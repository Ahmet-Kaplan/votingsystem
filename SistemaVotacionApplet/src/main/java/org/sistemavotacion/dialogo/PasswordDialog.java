package org.sistemavotacion.dialogo;

import static org.sistemavotacion.Contexto.*;

import java.awt.Frame;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import javax.swing.text.html.parser.ParserDelegator;
import org.sistemavotacion.Contexto;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

/**
* @author jgzornoza
* Licencia: https://raw.github.com/jgzornoza/SistemaVotacion/master/licencia.txt
*/
public class PasswordDialog extends javax.swing.JDialog {
    
    private static Logger logger = LoggerFactory.getLogger(PasswordDialog.class);

    private String password;
    Frame parentFrame;
    boolean isCapsLockPressed = false;
            
    public PasswordDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        this.parentFrame = parent;
        initComponents();
        setLocationRelativeTo(null);    
        password1Field.addKeyListener(new KeyListener(){
            boolean shiftPressed = false;
            @Override public void keyPressed(KeyEvent e){
                if(!shiftPressed) {
                    if(Character.isUpperCase(e.getKeyChar())) {
                        setCapsLockState(true);
                    } else setCapsLockState(false);
                } else {
                    if(Character.isUpperCase(e.getKeyChar())) {
                        setCapsLockState(false);
                    } else setCapsLockState(true);
                }
                
                if (e.getKeyCode() == KeyEvent.VK_ENTER)
                    aceptarButton.doClick();
                if (e.getKeyCode() == KeyEvent.VK_SHIFT) {
                    shiftPressed = true;
                }
                
            }
            @Override public void keyTyped(KeyEvent ke) {}
            @Override public void keyReleased(KeyEvent ke) {
                if (ke.getKeyCode() == KeyEvent.VK_SHIFT) {
                    shiftPressed = false;
                }
            }
        });
        password2Field.addKeyListener(new KeyListener(){
            @Override public void keyPressed(KeyEvent e){
                if (e.getKeyCode() == KeyEvent.VK_ENTER)
                aceptarButton.doClick();
            }
            @Override public void keyTyped(KeyEvent ke) {}
            @Override public void keyReleased(KeyEvent ke) {}
        });
        //Bug similar to -> http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6993691
        ParserDelegator workaround = new ParserDelegator();

        password = null;
        setTitle(getString("passwordDialogCaption"));
        /*boolean check = false;
        try {//NOT SUPPORTED IN APPLET
            check = Toolkit.getDefaultToolkit().
                getLockingKeyState(KeyEvent.VK_CAPS_LOCK);
        } catch(Exception ex) {
            logger.error(ex.getMessage(), ex);
        }
        if(check) changeCapsLockState();
        else messageLabel.setText(getString("recomendacionDNIE")); */
        messageLabel.setText(getString("recomendacionDNIE"));
        this.pack();
    }
    
    private void setCapsLockState (boolean pressed) {
        this.isCapsLockPressed = pressed;
        setMessage(null);
    }
    
    private void setMessage (String mensaje) {
        if (mensaje == null) {
            if(isCapsLockPressed) {
                messageLabel.setText("<html><b>" + 
                        Contexto.getString("capsLockKeyPressed") + "</b><br/><br/>" + 
                        getString("recomendacionDNIE") + "</html>");
            } else {
                messageLabel.setText(getString("recomendacionDNIE"));
            }
        } else {
            if(isCapsLockPressed) {
                messageLabel.setText("<html><b>" + 
                        Contexto.getString("capsLockKeyPressed") + "</b><br/>" + 
                        mensaje + "</html>");
            }  else messageLabel.setText(mensaje);
        }
        validationPanel.setVisible(true);
        pack();
    }

    public String getPassword() {
        return password;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        validationPanel = new javax.swing.JPanel();
        messageLabel = new javax.swing.JLabel();
        password2Label = new javax.swing.JLabel();
        password2Field = new javax.swing.JPasswordField();
        aceptarButton = new javax.swing.JButton();
        cerrarButton = new javax.swing.JButton();
        password1Label = new javax.swing.JLabel();
        password1Field = new javax.swing.JPasswordField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        validationPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        messageLabel.setForeground(new java.awt.Color(215, 43, 13));
        messageLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("org/sistemavotacion/dialogo/Bundle"); // NOI18N
        messageLabel.setText(bundle.getString("PasswordDialog.messageLabel.text")); // NOI18N

        javax.swing.GroupLayout validationPanelLayout = new javax.swing.GroupLayout(validationPanel);
        validationPanel.setLayout(validationPanelLayout);
        validationPanelLayout.setHorizontalGroup(
            validationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(validationPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(messageLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        validationPanelLayout.setVerticalGroup(
            validationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(validationPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(messageLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
                .addContainerGap())
        );

        password2Label.setText(bundle.getString("PasswordDialog.password2Label.text")); // NOI18N

        aceptarButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/images/accept_16x16.png"))); // NOI18N
        aceptarButton.setText(bundle.getString("PasswordDialog.aceptarButton.text_1")); // NOI18N
        aceptarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aceptarButtonActionPerformed(evt);
            }
        });

        cerrarButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/images/cancel_16x16.png"))); // NOI18N
        cerrarButton.setText(bundle.getString("PasswordDialog.cerrarButton.text_1")); // NOI18N
        cerrarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cerrarButtonActionPerformed(evt);
            }
        });

        password1Label.setText(bundle.getString("PasswordDialog.password1Label.text")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(password2Field)
                    .addComponent(password1Field)
                    .addComponent(validationPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(cerrarButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(aceptarButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(password1Label)
                            .addComponent(password2Label))
                        .addGap(0, 57, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(validationPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(password1Label)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(password1Field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(password2Label)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(password2Field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cerrarButton)
                    .addComponent(aceptarButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void aceptarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aceptarButtonActionPerformed
        String password1 = new String(password1Field.getPassword());
        String password2 = new String(password2Field.getPassword());
        if("".equals(password1) && "".equals(password1)) {
            messageLabel.setText(
                    getString("passwordMissing"));
            validationPanel.setVisible(true);
            pack();
            return;
        }
        messageLabel.setText(
                getString("recomendacionDNIE"));
        pack();
        if (password1.equals(password2)) {
            password = password1;
            this.dispose();
        } else {
            messageLabel.setText(
                    getString("passwordError"));
            validationPanel.setVisible(true);
            pack();
            password1Field.setText("");
            password2Field.setText("");
        }        // TODO add your handling code here:        // TODO add your handling code here:
    }//GEN-LAST:event_aceptarButtonActionPerformed

    private void cerrarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cerrarButtonActionPerformed
        dispose();
    }//GEN-LAST:event_cerrarButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PasswordDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PasswordDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PasswordDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PasswordDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the dialog
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                final PasswordDialog dialog = new PasswordDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        dialog.dispose();
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton aceptarButton;
    private javax.swing.JButton cerrarButton;
    private javax.swing.JLabel messageLabel;
    private javax.swing.JPasswordField password1Field;
    private javax.swing.JLabel password1Label;
    private javax.swing.JPasswordField password2Field;
    private javax.swing.JLabel password2Label;
    private javax.swing.JPanel validationPanel;
    // End of variables declaration//GEN-END:variables
}
