version = '0.2.0'

apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'maven'
apply plugin: 'ivy-publish'
apply plugin: 'maven-publish'
apply plugin: "idea"

sourceCompatibility = 7
targetCompatibility = 7

install {
    repositories.mavenInstaller {
        pom.artifactId = 'votingsystemlibrary'
    }
}

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {

    compile 'org.codehaus.groovy:groovy-all:2.3.1'

    compile 'commons-cli:commons-cli:1.2'

    compile ('com.itextpdf:itextpdf:5.1.3',
            'org.apache.httpcomponents:httpmime:4.2.4',
            'org.apache.httpcomponents:httpclient:4.2.4',
            'org.hibernate:hibernate-core:4.3.5.Final',
            'net.sf.json-lib:json-lib:2.4:jdk15',
            'org.bouncycastle:bcprov-jdk16:1.46',
            'org.bouncycastle:bcmail-jdk16:1.46',
            'org.bouncycastle:bctsp-jdk16:1.46',
            'javax.mail:mail:1.4.1',
            'log4j:log4j:1.2.12')

}

jar {
    manifest {
        attributes 'url':'https://github.com/jgzornoza/SistemaVotacion/tree/master/VotingSystemLibrary',
                'provider': 'sistemavotacion.org'
    }

    publishing {
        publications {
            //gradle publishIvyJavaPublicationToIvyRepository
            ivy(IvyPublication) {
                organisation 'org.votingsystem'
                module 'votingsystemlibrary'
                descriptor.status = 'release'

                from components.java
            }

            jarAndSourceJar(MavenPublication) {
                groupId 'org.votingsystem'
                artifactId 'votingsystemlibrary'

                from components.java

                artifact sourceJar {
                    classifier "sources"
                }

                pom.withXml {
                    asNode().appendNode('description', 'Helper library for Voting System - ' +
                            'https://github.com/jgzornoza/SistemaVotacion')
                }
            }

        }

        repositories {
            ivy {
                def repoPath = "${System.getProperty('user.home')}/.grails/ivy-cache"
                println(" --- publishing to '${repoPath}' ivy repo")
                url "$repoPath"
                layout 'pattern' , {
                    artifact '[organisation]/[module]/jars/[artifact]-[revision](.[ext])'
                    ivy '[organisation]/[module]/ivy-[revision].xml'
                }
            }

            maven {
                def repoPath = "${System.getProperty('user.home')}/.m2/repository"
                println(" --- publishing to '${repoPath}' maven repo")
                url "$repoPath"
            }

        }

    }
}

task sourceJar(type: Jar) {
    from sourceSets.main.allJava
}

task generateCertificates(dependsOn: ['classes'], type: JavaExec) {

    onlyIf {rootProject.certsDataMap}

    doFirst {
        args groovy.json.JsonOutput.toJson(rootProject.certsDataMap)
    }

    main = 'org.votingsystem.util.CertGenerator'
    classpath = sourceSets.main.runtimeClasspath
}


sourceSets {
    main {

        groovy {
            srcDirs 'src/main/groovy', 'src/main/java'
        }

        //to override the defaults:
        //output.resourcesDir = "$buildDir/classes"
        output.classesDir   = "$buildDir/classes"
    }
}