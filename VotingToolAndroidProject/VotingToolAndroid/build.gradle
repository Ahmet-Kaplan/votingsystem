buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:0.6.+'
    }
}

apply plugin: 'android'
apply plugin: 'announce'


repositories {
    mavenLocal()
    mavenCentral()
}

android {
    compileSdkVersion 18
    buildToolsVersion "18.1.1"


    signingConfigs {
        release {
            storeFile file("$rootProject.projectDir/$rootProject.testUserKeyStorePath",)
            storePassword rootProject.keyStorePassword
            keyAlias rootProject.signKeyAlias
            keyPassword rootProject.keyStorePassword
        }
    }

    defaultConfig {
        minSdkVersion 10
        targetSdkVersion 16
    }

    buildTypes {
        debug { }
        release {
            signingConfig signingConfigs.release
        }

    }

    applicationVariants.all { variant ->
        variant.outputFile = file("${signedAndroidAppName}.apk")
    }

}

dependencies {
    compile 'com.android.support:appcompat-v7:+'
    //compile fileTree(dir: 'libs', include: '*.jar')
    compile 'com.android.support:support-v4:18.0.0'
    compile project(':libraries:bc')
    compile project(':libraries:itext')
    compile project(':libraries:votingsystem')
}

preBuild.dependsOn 'setAndroidEnv'

task release(dependsOn:'build') <<  {
    rootProject.ext.set("votingToolAndroid",file("${signedAndroidAppName}.apk"))
    announce.announce("Android Voting Tool '${signedAndroidAppName}.apk' signed and put into context", "local")
}

task setAndroidEnv() << {
	def env = System.getenv()
	//env.each{println it} 
	String androidHome= env['ANDROID_HOME']
	if(!androidHome) throw new RuntimeException('Android SDK not Found you must install -> http://developer.android.com/sdk/index.html')
}
