package org.sistemavotacion.herramientavalidacion;

import org.sistemavotacion.herramientavalidacion.modelo.MetaInf;
import java.awt.Desktop;
import java.awt.Frame;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.IOException;
import java.net.URI;
import java.net.URISyntaxException;
import javax.swing.JFrame;
import javax.swing.JPanel;
import org.sistemavotacion.Contexto;
import org.sistemavotacion.util.DateUtils;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

/**
* @author jgzornoza
* Licencia: https://github.com/jgzornoza/SistemaVotacion/wiki/Licencia
*/
public class InformacionEventoPanel extends JPanel {
    
    private static Logger logger = LoggerFactory.getLogger(InformacionEventoPanel.class);
    
    private String valorTipoEvento = null;
    private MetaInf metaInf = null;

    public InformacionEventoPanel(MetaInf metaInf) {
        try {
            initComponents();
            valorAsuntoLabel.setText(metaInf.getSubject());
            String eventPathPart = null;
            dateFinishValueLabel.setText(DateUtils.getStringFromDate(metaInf.getDateFinish()));
            dateInitValueLabel.setText(DateUtils.getStringFromDate(metaInf.getDateInit()));
            switch (metaInf.getType()) {
                case EVENTO_FIRMA:
                    valorTipoEvento = Contexto.INSTANCE.getString("manfiestoLabel");
                    eventPathPart = "/eventoFirma";
                    documentosFirmadosLabel.setText("<html><b>" + 
                            Contexto.INSTANCE.getString("numeroFirmasLabel") + 
                            ": </b></html>");
                    valorNumeroDocumentosLabel.setText(
                            String.valueOf(metaInf.getNumSignatures()));
                    representativesButton.setVisible(false);
                    break;
                case EVENTO_RECLAMACION:
                    valorTipoEvento = Contexto.INSTANCE.
                        getString("reclamacionLabel");
                    eventPathPart = "/eventoReclamacion";
                    documentosFirmadosLabel.setText("<html><b>" + 
                            Contexto.INSTANCE.
                            getString("numeroFirmasLabel") + ": </b></html>");
                    valorNumeroDocumentosLabel.setText(
                            String.valueOf(metaInf.getNumSignatures()));
                    representativesButton.setVisible(false);
                    break;
                case EVENTO_VOTACION:
                    valorTipoEvento = Contexto.INSTANCE.
                        getString("votacionLabel");
                    eventPathPart = "/eventoVotacion";
                    documentosFirmadosLabel.setText("<html><b>" + 
                            Contexto.INSTANCE.
                            getString("numeroVotosLabel") + ": </b></html>");
                    valorNumeroDocumentosLabel.setText(String.valueOf(metaInf.getNumVotes()));
                    solicitudesAccesoLabel.setText("<html><b>" + 
                            Contexto.INSTANCE.
                        getString("solicitudesAccesoLabel") + ": </b></html>");
                    valorSolicitudesAccesoLabel.setText(String.valueOf(
                            metaInf.getNumAccessRequest()));                            
                    break;                    
            }
            String metaInfURL = metaInf.getServerURL();
            if(eventPathPart != null) {
                metaInfURL = metaInfURL.concat(eventPathPart);
                if(metaInf.getId() != null) metaInfURL = metaInfURL.concat(
                        "/"+ metaInf.getId());
            }
            final String urlToOpen = metaInfURL;
            valorURLButton.addActionListener(new ActionListener() {
                @Override
                public void actionPerformed(ActionEvent e) {
                    URI uri = null;
                    try {
                        uri = new URI(urlToOpen);
                    } catch (URISyntaxException ex) {
                        logger.error(ex.getMessage(), ex);
                    }
                    open(uri);
                }
            });
            this.metaInf = metaInf;
            textPane.setContentType("text/html");
            textPane.setEditable(false);
            textPane.setText(metaInf.getOptionsHTML());
        } catch (Exception ex) {
            logger.error(ex.getMessage(), ex);
        }        
    }
    
    public String getValorTipoEvento() {
        return valorTipoEvento;
    }
    

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        asuntoLabel = new javax.swing.JLabel();
        valorAsuntoLabel = new javax.swing.JLabel();
        documentosFirmadosLabel = new javax.swing.JLabel();
        valorNumeroDocumentosLabel = new javax.swing.JLabel();
        valorURLButton = new javax.swing.JButton();
        solicitudesAccesoLabel = new javax.swing.JLabel();
        valorSolicitudesAccesoLabel = new javax.swing.JLabel();
        scrollPane = new javax.swing.JScrollPane();
        textPane = new javax.swing.JTextPane();
        representativesButton = new javax.swing.JButton();
        dateInitLabel = new javax.swing.JLabel();
        dateInitValueLabel = new javax.swing.JLabel();
        dateFinishLabel = new javax.swing.JLabel();
        dateFinishValueLabel = new javax.swing.JLabel();

        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("org/sistemavotacion/herramientavalidacion/Bundle"); // NOI18N
        asuntoLabel.setText(bundle.getString("InformacionEventoPanel.asuntoLabel.text")); // NOI18N
        asuntoLabel.setName("asuntoLabel"); // NOI18N

        valorAsuntoLabel.setFont(new java.awt.Font("Cantarell", 0, 18)); // NOI18N
        valorAsuntoLabel.setText(bundle.getString("InformacionEventoPanel.valorAsuntoLabel.text")); // NOI18N
        valorAsuntoLabel.setName("valorAsuntoLabel"); // NOI18N

        documentosFirmadosLabel.setText(bundle.getString("InformacionEventoPanel.documentosFirmadosLabel.text")); // NOI18N
        documentosFirmadosLabel.setName("documentosFirmadosLabel"); // NOI18N

        valorNumeroDocumentosLabel.setText(bundle.getString("InformacionEventoPanel.valorNumeroDocumentosLabel.text")); // NOI18N
        valorNumeroDocumentosLabel.setName("valorNumeroDocumentosLabel"); // NOI18N

        valorURLButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/images/agt_internet.png"))); // NOI18N
        valorURLButton.setText(bundle.getString("InformacionEventoPanel.valorURLButton.text")); // NOI18N
        valorURLButton.setName("valorURLButton"); // NOI18N

        solicitudesAccesoLabel.setText(bundle.getString("InformacionEventoPanel.solicitudesAccesoLabel.text")); // NOI18N
        solicitudesAccesoLabel.setName("solicitudesAccesoLabel"); // NOI18N

        valorSolicitudesAccesoLabel.setText(bundle.getString("InformacionEventoPanel.valorSolicitudesAccesoLabel.text")); // NOI18N
        valorSolicitudesAccesoLabel.setName("valorSolicitudesAccesoLabel"); // NOI18N

        scrollPane.setName("scrollPane"); // NOI18N

        textPane.setName("textPane"); // NOI18N
        scrollPane.setViewportView(textPane);

        representativesButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/images/Group_16x16.png"))); // NOI18N
        representativesButton.setText(bundle.getString("InformacionEventoPanel.representativesButton.text")); // NOI18N
        representativesButton.setName("representativesButton"); // NOI18N
        representativesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                representativesButtonActionPerformed(evt);
            }
        });

        dateInitLabel.setText(bundle.getString("InformacionEventoPanel.dateInitLabel.text")); // NOI18N
        dateInitLabel.setName("dateInitLabel"); // NOI18N

        dateInitValueLabel.setText(bundle.getString("InformacionEventoPanel.dateInitValueLabel.text")); // NOI18N
        dateInitValueLabel.setName("dateInitValueLabel"); // NOI18N

        dateFinishLabel.setText(bundle.getString("InformacionEventoPanel.dateFinishLabel.text")); // NOI18N
        dateFinishLabel.setName("dateFinishLabel"); // NOI18N

        dateFinishValueLabel.setText(bundle.getString("InformacionEventoPanel.dateFinishValueLabel.text")); // NOI18N
        dateFinishValueLabel.setName("dateFinishValueLabel"); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(asuntoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(valorAsuntoLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(valorURLButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 228, Short.MAX_VALUE)
                        .addComponent(representativesButton))
                    .addComponent(scrollPane)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(dateInitLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dateInitValueLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dateFinishLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dateFinishValueLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(solicitudesAccesoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 277, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(documentosFirmadosLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 277, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(valorNumeroDocumentosLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(valorSolicitudesAccesoLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(asuntoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(valorAsuntoLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dateInitLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dateInitValueLabel)
                    .addComponent(dateFinishLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dateFinishValueLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(documentosFirmadosLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(valorNumeroDocumentosLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(solicitudesAccesoLabel)
                    .addComponent(valorSolicitudesAccesoLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 296, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(valorURLButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(representativesButton))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void representativesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_representativesButtonActionPerformed
        RepresentativesDetailsDialog representativesDialog = 
                new RepresentativesDetailsDialog(new JFrame(), true);
        representativesDialog.showRepresentativesDetails(metaInf.getRepresentativesHTML());
    }//GEN-LAST:event_representativesButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel asuntoLabel;
    private javax.swing.JLabel dateFinishLabel;
    private javax.swing.JLabel dateFinishValueLabel;
    private javax.swing.JLabel dateInitLabel;
    private javax.swing.JLabel dateInitValueLabel;
    private javax.swing.JLabel documentosFirmadosLabel;
    private javax.swing.JButton representativesButton;
    private javax.swing.JScrollPane scrollPane;
    private javax.swing.JLabel solicitudesAccesoLabel;
    private javax.swing.JTextPane textPane;
    private javax.swing.JLabel valorAsuntoLabel;
    private javax.swing.JLabel valorNumeroDocumentosLabel;
    private javax.swing.JLabel valorSolicitudesAccesoLabel;
    private javax.swing.JButton valorURLButton;
    // End of variables declaration//GEN-END:variables

    private static void open(URI uri) {
        if (Desktop.isDesktopSupported()) {
            Desktop desktop = Desktop.getDesktop();
            try {
                desktop.browse(uri);
            } catch (IOException ex) {
                logger.error(ex.getMessage(), ex);
            }
        } else {
            MensajeDialog mensajeDialog = new MensajeDialog(new Frame(), true);
            mensajeDialog.setMessage(Contexto.INSTANCE.getString(
                    "platformNotSupportedErrorMsg"), Contexto.INSTANCE.getString("errorLbl"));
        }
    }

}
