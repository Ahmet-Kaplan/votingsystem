package org.sistemavotacion.herramientavalidacion;

import java.io.File;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

/**
* @author jgzornoza
* Licencia: https://github.com/jgzornoza/SistemaVotacion/wiki/Licencia
*/
public class DialogoPrincipal extends javax.swing.JDialog {
        
    private static Logger logger = LoggerFactory.getLogger(DialogoPrincipal.class);

    java.awt.Frame parentFrame;
    
    /** Creates new form DialogoPrincipal */
    public DialogoPrincipal(java.awt.Frame parentFrame, boolean modal) {
        super(parentFrame, modal);
        initComponents();
        this.parentFrame = parentFrame;
        progressBarPanel.setVisible(false);
        pack();
        setLocationRelativeTo(null);   
        setTitle(AppletHerramienta.getResourceBundle().
                getString("dialogoPrincipalCaption"));
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        abrirArchivoFirmadoButton = new javax.swing.JButton();
        abrirZipCopiaRespaldoButton = new javax.swing.JButton();
        progressBarPanel = new javax.swing.JPanel();
        progressLabel = new javax.swing.JLabel();
        progressBar = new javax.swing.JProgressBar();
        cerrarButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        abrirArchivoFirmadoButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/images/fileopen16x16.png"))); // NOI18N
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("org/sistemavotacion/herramientavalidacion/Bundle"); // NOI18N
        abrirArchivoFirmadoButton.setText(bundle.getString("DialogoPrincipal.abrirArchivoFirmadoButton.text")); // NOI18N
        abrirArchivoFirmadoButton.setName("abrirArchivoFirmadoButton"); // NOI18N
        abrirArchivoFirmadoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                abrirArchivoFirmadoButtonActionPerformed(evt);
            }
        });

        abrirZipCopiaRespaldoButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/images/zip_16x16.png"))); // NOI18N
        abrirZipCopiaRespaldoButton.setText(bundle.getString("DialogoPrincipal.abrirZipCopiaRespaldoButton.text")); // NOI18N
        abrirZipCopiaRespaldoButton.setName("abrirZipCopiaRespaldoButton"); // NOI18N
        abrirZipCopiaRespaldoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                abrirZipCopiaRespaldoButtonActionPerformed(evt);
            }
        });

        progressBarPanel.setName("progressBarPanel"); // NOI18N

        progressLabel.setText(bundle.getString("DialogoPrincipal.progressLabel.text")); // NOI18N
        progressLabel.setName("progressLabel"); // NOI18N

        progressBar.setIndeterminate(true);
        progressBar.setName("progressBar"); // NOI18N

        javax.swing.GroupLayout progressBarPanelLayout = new javax.swing.GroupLayout(progressBarPanel);
        progressBarPanel.setLayout(progressBarPanelLayout);
        progressBarPanelLayout.setHorizontalGroup(
            progressBarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(progressBarPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(progressBarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(progressLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
                    .addComponent(progressBar, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE))
                .addContainerGap())
        );
        progressBarPanelLayout.setVerticalGroup(
            progressBarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(progressBarPanelLayout.createSequentialGroup()
                .addComponent(progressLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(progressBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        cerrarButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/images/cancel_16x16.png"))); // NOI18N
        cerrarButton.setText(bundle.getString("DialogoPrincipal.cerrarButton.text")); // NOI18N
        cerrarButton.setName("cerrarButton"); // NOI18N
        cerrarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cerrarButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(abrirZipCopiaRespaldoButton, javax.swing.GroupLayout.DEFAULT_SIZE, 424, Short.MAX_VALUE)
                    .addComponent(abrirArchivoFirmadoButton, javax.swing.GroupLayout.DEFAULT_SIZE, 424, Short.MAX_VALUE)
                    .addComponent(progressBarPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cerrarButton, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(progressBarPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(abrirArchivoFirmadoButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(abrirZipCopiaRespaldoButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cerrarButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void abrirZipCopiaRespaldoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_abrirZipCopiaRespaldoButtonActionPerformed
        logger.debug("Abriendo Zip Con Firmas");
        VisualizadorDeEventoFirmadoDialog visualizador =
                new VisualizadorDeEventoFirmadoDialog(parentFrame, false);
        File file = visualizador.abrirZipConFirmas();
        if (file != null) visualizador.setVisible(true);
    }//GEN-LAST:event_abrirZipCopiaRespaldoButtonActionPerformed

    private void abrirArchivoFirmadoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_abrirArchivoFirmadoButtonActionPerformed
        logger.debug("Abriendo archivo firmado");
        VisualizadorDeEventoFirmadoDialog visualizador =
                        new VisualizadorDeEventoFirmadoDialog(parentFrame, false);
        File file = visualizador.abrirArchivoFirmado();
        if (file != null) visualizador.setVisible(true);
    }//GEN-LAST:event_abrirArchivoFirmadoButtonActionPerformed

    private void cerrarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cerrarButtonActionPerformed
        dispose();
    }//GEN-LAST:event_cerrarButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DialogoPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DialogoPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DialogoPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DialogoPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                DialogoPrincipal dialog = new DialogoPrincipal(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton abrirArchivoFirmadoButton;
    private javax.swing.JButton abrirZipCopiaRespaldoButton;
    private javax.swing.JButton cerrarButton;
    private javax.swing.JProgressBar progressBar;
    private javax.swing.JPanel progressBarPanel;
    private javax.swing.JLabel progressLabel;
    // End of variables declaration//GEN-END:variables
}
