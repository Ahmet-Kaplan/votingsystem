package org.sistemavotacion.herramientavalidacion;

import javax.swing.ImageIcon;
import org.bouncycastle.tsp.TimeStampToken;
import org.sistemavotacion.seguridad.CertUtil;
import java.security.cert.X509Certificate;
import java.util.Collection;
import java.util.logging.Level;
import java.util.logging.Logger;
import org.bouncycastle.cms.jcajce.JcaSimpleSignerInfoVerifierBuilder;
import org.bouncycastle.jce.provider.BouncyCastleProvider;
import org.bouncycastle.tsp.TSPException;
import org.bouncycastle.tsp.TSPValidationException;
import org.slf4j.LoggerFactory;

/**
* @author jgzornoza
* Licencia: https://github.com/jgzornoza/SistemaVotacion/blob/master/licencia.txt
*/
public class TimeStampCertFormDialog extends javax.swing.JDialog {

    private static org.slf4j.Logger logger = 
            LoggerFactory.getLogger(TimeStampCertFormDialog.class);

    TimeStampToken timeStampToken = null;
    
    public TimeStampCertFormDialog(java.awt.Frame parent, boolean modal, 
            TimeStampToken timeStampToken) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(null);
        validationResultPanel.setVisible(false);
        this.timeStampToken = timeStampToken;
        setMessage(null, null);
        pack();
    }
    
    private void setMessage(Boolean isOK, String message) {
        if(message == null || "".equals(message)) {
            validationResultPanel.setVisible(false);
        } else {
            if(isOK != null) {
                if(isOK) {
                    validationResultIconLabel.setIcon(new ImageIcon(
                            getClass().getResource(
                            "/resources/images/accept_16x16.png")));
                    validationResultIconLabel.setVisible(true);
                } else {
                    validationResultIconLabel.setIcon(new ImageIcon(
                            getClass().getResource(
                            "/resources/images/cancel_16x16.png")));
                }
            }
            validationResultMsgLabel.setText(message);
            validationResultMsgLabel.setVisible(true);
            validationResultPanel.setVisible(true);
        }
        pack();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        messageLabel = new javax.swing.JLabel();
        scrollPane1 = new javax.swing.JScrollPane();
        pemCertTextArea = new javax.swing.JTextArea();
        validationResultPanel = new javax.swing.JPanel();
        validationResultIconLabel = new javax.swing.JLabel();
        validationResultMsgLabel = new javax.swing.JLabel();
        validationButton = new javax.swing.JButton();
        closeButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("org/sistemavotacion/herramientavalidacion/Bundle"); // NOI18N
        setTitle(bundle.getString("TimeStampCertFormDialog.title")); // NOI18N

        messageLabel.setText(bundle.getString("TimeStampCertFormDialog.messageLabel.text")); // NOI18N

        pemCertTextArea.setColumns(20);
        pemCertTextArea.setRows(5);
        scrollPane1.setViewportView(pemCertTextArea);

        validationResultIconLabel.setText(bundle.getString("TimeStampCertFormDialog.validationResultIconLabel.text")); // NOI18N

        validationResultMsgLabel.setText(bundle.getString("TimeStampCertFormDialog.validationResultMsgLabel.text")); // NOI18N

        javax.swing.GroupLayout validationResultPanelLayout = new javax.swing.GroupLayout(validationResultPanel);
        validationResultPanel.setLayout(validationResultPanelLayout);
        validationResultPanelLayout.setHorizontalGroup(
            validationResultPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(validationResultPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(validationResultIconLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(validationResultMsgLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        validationResultPanelLayout.setVerticalGroup(
            validationResultPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(validationResultPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(validationResultPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(validationResultIconLabel)
                    .addComponent(validationResultMsgLabel))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        validationButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/images/accept_16x16.png"))); // NOI18N
        validationButton.setText(bundle.getString("TimeStampCertFormDialog.validationButton.text")); // NOI18N
        validationButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                validationButtonActionPerformed(evt);
            }
        });

        closeButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/images/cancel_16x16.png"))); // NOI18N
        closeButton.setText(bundle.getString("TimeStampCertFormDialog.closeButton.text")); // NOI18N
        closeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(scrollPane1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(validationButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(closeButton))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(messageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 5, Short.MAX_VALUE))
                    .addComponent(validationResultPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(messageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 375, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(validationResultPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(closeButton)
                    .addComponent(validationButton))
                .addGap(8, 8, 8))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void validationButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_validationButtonActionPerformed
        setMessage(null, null);
        boolean validationOK = false;
        X509Certificate validationCert = null;
        Collection<X509Certificate> certs = null;
        
        try {
            String pemCert = pemCertTextArea.getText();
            certs = CertUtil.fromPEMToX509CertCollection(pemCert.getBytes());
        } catch (Exception ex) {
            logger.error(ex.getMessage(), ex);
            setMessage(false, AppletHerramienta.getString("pemCertsErrorMsg"));
        }
        for(X509Certificate cert:certs) {
            logger.debug(" ----------- Validating timeStampToken with cert: " 
                    + cert.getSubjectDN().toString());
            try {
                timeStampToken.validate(new JcaSimpleSignerInfoVerifierBuilder().
                                setProvider(BouncyCastleProvider.PROVIDER_NAME).build(cert));
                validationOK = true;
                validationCert = cert;
            } catch (Exception ex) {
                logger.error(ex.getMessage(), ex);
            }
        }
        if(!validationOK) {
            logger.debug("Error validando");
             setMessage(false, AppletHerramienta.getString("pemCertsErrorMsg"));
        } else {
            logger.debug("Validación OK");
            setMessage(true, AppletHerramienta.getString("pemCertsValidationOKMsg", 
                    validationCert.getSubjectDN().toString()));        
        }
    }//GEN-LAST:event_validationButtonActionPerformed

    private void closeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeButtonActionPerformed
        dispose();
    }//GEN-LAST:event_closeButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton closeButton;
    private javax.swing.JLabel messageLabel;
    private javax.swing.JTextArea pemCertTextArea;
    private javax.swing.JScrollPane scrollPane1;
    private javax.swing.JButton validationButton;
    private javax.swing.JLabel validationResultIconLabel;
    private javax.swing.JLabel validationResultMsgLabel;
    private javax.swing.JPanel validationResultPanel;
    // End of variables declaration//GEN-END:variables
}
