apply plugin: 'java'

sourceCompatibility = 7

dependencies {
    compile (project(':VotingSystemLibrary'))
}

task copyApps(dependsOn: [':generateVotingSystemApps', ':ClientTool:copyDistZip']) {
	doLast {
        copyVotingSystemApps(project)

        File clientToolDir = project.file("web-app/tools/");
        clientToolDir.mkdirs()
        File clientToolDist = project.file("web-app/tools/${rootProject.clientToolName}.zip")
        if(clientToolDist.exists()) clientToolDist.delete()
        clientToolDist << rootProject.clientToolDistZip?.bytes
	}
}

task installEditor << { task ->
    installCkeditor(project)
}

task stopApp << {
	file("${projectDir}/.kill-run-app").createNewFile()
}

task runApp << { task ->
	runCommand(project, file(".") ,["grails", "run-app"])	
}

task installGrailsRestDocPlugin << { task ->
	installGrailsRestDocPlugin(project)
}

task generateRestDocs() << {task ->
	runCommand(project, file(".") ,["grails", "generate-rest-docs"])
}

task war(dependsOn:['copyApps']) << {task ->
	runCommand(project, file(".") ,["grails", "war"])	
	announce.announce("'$project.name' - WebApp WAR file generated", "local")
}

defaultTasks 'war'
