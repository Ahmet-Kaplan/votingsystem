<%@ page contentType="text/html; charset=UTF-8" %>

<link href="${resourceURL}/paper-item/paper-item.html" rel="import"/>

<link href="${resourceURL}/vs-innerpage-signal/vs-innerpage-signal.html" rel="import"/>
<link href="${resourceURL}/paper-drawer-panel/paper-drawer-panel.html" rel="import"/>
<link href="${resourceURL}/paper-header-panel/paper-header-panel.html" rel="import"/>
<link href="${resourceURL}/paper-toolbar/paper-toolbar.html" rel="import"/>
<link href="${resourceURL}/paper-menu/paper-menu.html" rel="import"/>
<link href="${resourceURL}/paper-item/paper-item.html" rel="import"/>
<link href="${resourceURL}/paper-dropdown/paper-dropdown.html" rel="import"/>
<link href="${resourceURL}/paper-icon-button/paper-icon-button.html" rel="import"/>

<dom-module name="votingsystem-navbar" attributes="url loading">
    <template>
        <link href="${resourceURL}/font-awesome/css/font-awesome.min.css" media="all" rel="stylesheet" />
        <!--<iron-ajax id="ajax" auto on-iron-response="{{ajaxResponse}}" on-iron-error="{{ajaxError}}" handleAs="document"></iron-ajax>-->
        <iron-ajax id="ajax" handleAs=""></iron-ajax>
        <!-- put core signals names in lower case !!!-->
        <iron-signals on-iron-signal-vs-innerpage="{{innerPageSignal}}" on-iron-signal-vs-session-data="{{sessionDataSignal}}"
                      on-iron-signal-vs-websocket-message="{{websocketSignal}}"></iron-signals>
        <vs-navbar id="_navbar">
            <paper-header-panel mode="seamed" id="core_header_panel" navigation flex class="vs-navbar">
                <paper-toolbar id="core_toolbar" style="background-color: #ba0011;">
                </paper-toolbar>
                <paper-menu attr-for-selected="label" id="core_menu" theme="core-light-theme" style="font-size: 1.2em;">
                    <iron-selector id="coreSelector" selected="{{selectorValue}}" attr-for-selected="data-href" on-iron-select="drawerItemSelected">
                        <paper-item data-href="${restURL}/eventVSElection">
                            <i class="fa fa-envelope" style="margin:0px 10px 0px 0px;"></i> ${msg.electionSystemLbl}
                        </paper-item>
                        <paper-item data-href="${contextURL}/subscriptionVS/feeds.xhtml">
                            <i class="fa fa-rss" style="margin:0px 10px 0px 0px;"></i> ${msg.subscriptionLbl}
                        </paper-item>
                        <paper-item data-href="${contextURL}/app/contact.xhtml">
                            <i class="fa fa-phone" style="margin:0px 10px 0px 0px;"></i> ${msg.contactLbl}
                        </paper-item>
                    </iron-selector>
                </paper-menu>
            </paper-header-panel>
            <div id="appTitle" style="font-size:1.5em;width: 100%; text-align: center;" tool>{{appTitle}}</div>
            <div id="contentDiv" layout vertical start-justified></div>
            <content></content>
        </vs-navbar>
        <div hidden="{{!loading}}" style="width: 30px;margin: 100px auto 0px auto;">
            <i class="fa fa-cog fa-spin" style="font-size:3em;color:#ba0011;"></i>
        </div>
    </template>
    <script>
        Polymer({
            is:'votingsystem-navbar',
            appTitle:"${msg.appTitle}",
            url:'',
            ajaxOptions:{method:'get', responseType:'document'},
            ready: function() {
                this.isClientToolConnected = window['isClientToolConnected']
                console.log(this.tagName + " - ready - isClientToolConnected: " + this.isClientToolConnected)
                this.$._navbar.searchVisible(false)
                window.addEventListener('popstate', function(event) {
                    this.url = document.location.href
                }.bind(this));
                //window.addEventListener("popstate", function(e) {  });
                this.loading = false
            },
            urlChanged: function() { //for history navigation
                this.loadURL(this.url)
            },
            sessionDataSignal:function(e, detail, sender) {
                console.log("sessionDataSignal")
            },
            websocketSignal:function(e, detail, sender) {
                if("OPEN" === detail.socketStatus && "INIT_SIGNED_SESSION" === detail.operation) {
                    this.$._navbar.updateSession(detail.userVS, null)
                } else if("CLOSED" === detail.socketStatus) {
                    this.$._navbar.updateSession(null, null)
                } else console.log("userVS NOT updated")

                if(detail.messageVSList && detail.messageVSList.length > 0) alert("You have pending messages")
                //{"locale":"es","operation":"INIT_SIGNED_SESSION","sessionId":"2","userId":2,"messageVSList":[],"state":"PENDING","status":200,"socketStatus":"OPEN"}
            },
            innerPageSignal:function(e, detail, sender) {
                console.log("innerPageSignal - caption:" + detail.caption + " - url: " + detail.url)
                sendSignalVS(detail)
                var sufix = ""
                if('admin' === menuType) sufix = ' - ${msg.adminLbl}'
                if('superuser' === menuType) sufix = ' - ${msg.superUserLbl}'
                if(detail.caption) this.appTitle = detail.caption + sufix
                if(detail.searchVisible) this.$._navbar.searchVisible(detail.searchVisible)
                if(detail.url) this.loadURL(detail.url)
                document.dispatchEvent( new Event('innerPageSignal'));
            },
            loadURL: function(urlToLoad) {
                this.loading= true;
                //history.pushState(null, null, this.url);
                history.pushState(null, null, urlToLoad);
                var newURL = updateMenuLink(urlToLoad, "mode=innerPage")
                this.ajaxOptions.url = newURL
                this.ajaxOptions.callback = this.ajaxResponse.bind(this)
                this.$.ajax.request(this.ajaxOptions)
                /*if(this.$.ajax.url == newURL)  this.$.ajax.generateRequest()
                 else this.$.ajax.url = newURL*/
            },
            drawerItemSelected: function(e) {
                if(e.detail.isSelected) {
                    this.fire('item-selected', this.selectorValue)
                    if(this.$.coreSelector.selectedItem != null && 'changeToAdmin' == this.$.coreSelector.selectedItem.id) {
                        window.location.href = window.location.href.replace("menu=superuser", "menu=admin");
                    } else this.loadURL(this.selectorValue)
                    this.selectorValue = null
                }
            },
            setTitle: function(appTitle) {
                this.appTitle = appTitle
            },
            ajaxResponse: function(ajaxDocument, xhr) {
                console.log("ajaxResponse - status: " + xhr.status)
                if(400 === xhr.status || 404 === xhr.status) {
                    this.loading = false
                    alert(ajaxDocument.body.innerHTML)
                    return
                }
                if(!ajaxDocument) return
                var links = ajaxDocument.querySelectorAll('link')
                var numImports = 0
                for (var i = 0; i < links.length; i++) {
                    console.log("links[i].innerHTML: " + links[i].href + " - rel: " + links[i].rel)
                    if('import' == links[i].rel) {
                        ++numImports
                        if(i == (links.length - 1)) {
                            links[i].onload = function() { this.loading = false; }.bind(this);
                        }
                        document.head.appendChild(links[i]);
                    }
                }
                if(numImports == 0) this.loading = false;
                for (var i = 0; i < ajaxDocument.scripts.length; i++) {
                    var script = document.createElement("script");
                    if(ajaxDocument.scripts[i].src !== '') {
                        console.log("loading script src")
                        script.src = ajaxDocument.scripts[i].src
                    } else {
                        console.log("loading script innerHTML")
                        script.innerHTML = ajaxDocument.scripts[i].innerHTML;
                    }
                    console.log("ajaxDocument.scripts[i].src: " + ajaxDocument.scripts[i].src)
                    document.head.appendChild(script);
                }
                this.innerHTML = ""
                this.$.contentDiv.innerHTML = ajaxDocument.body.innerHTML
                updateLinksVS(document.querySelectorAll("#navBar a"))
            },
            ajaxError: function(e) {
                console.log(this.tagName + " - ajaxError")
                if(ResponseVS.SC_PRECONDITION_FAILED == e.detail.xhr.status) {
                    this.loading = false
                    var response = e.detail.xhr.responseText
                    showMessageVS(response, '${msg.errorLbl}')
                }
            }
        });
    </script>
</dom-module>