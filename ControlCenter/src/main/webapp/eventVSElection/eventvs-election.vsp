<%@ page contentType="text/html; charset=UTF-8" %>

<link href="${resourceURL}/paper-fab/paper-fab.html" rel="import"/>
<link href="${resourceURL}/paper-fab/paper-fab.html" rel="import"/>
<link href="${elementURL}/eventVSElection/eventvs-election-stats.vsp" rel="import"/>

<dom-module name="eventvs-election">
    <template>
        <link href="${contextURL}/resources/css/votingSystem.css" media="all" rel="stylesheet" />
        <link href="${resourceURL}/font-awesome/css/font-awesome.min.css" media="all" rel="stylesheet" />
        <style></style>
        <div>
            <div style="margin: 0px 30px;">
            <div layout horizontal center center-justified style="width:100%;">
                <div hidden="{{!fabVisible}}">
                    <paper-fab mini icon="arrow-back" on-click="back" style="color: white;"></paper-fab>
                </div>
                <div class="flex" id="pageTitle" eventvsId-data="{{eventvs.id}}" class="pageHeader">{{eventvs.subject}}</div>
            </div>

            <div layout horizontal style="width: 100%;">
                <div class="flex">
                    <template if="{{'PENDING' == eventvs.state}}">
                        <div style="font-size: 1.2em; font-weight:bold;color:#fba131;">${msg.eventVSPendingMsg}</div>
                    </template>
                    <template if="{{'TERMINATED' == eventvs.state || 'CANCELED' == eventvs.state}}">
                        <div style="font-size: 2em; font-weight:bold;color:#cc1606;">${msg.eventVSFinishedLbl}</div>
                    </template>
                </div>
                <div style="margin:0px 30px 0px 30px;"><b>${msg.beginLbl}: </b>{{getDate(eventvs.dateBegin)}}</div>
            </div>

            <div>
                <div class="eventContentDiv">
                    <vs-html-echo html="{{decodeBase64(eventvs.content)}}"></vs-html-echo>
                </div>

                <div id="eventAuthorDiv" class="text-right row" style="margin:0px 20px 20px 0px;font-size: 0.85em;">
                    <b>${msg.publishedByLbl}: </b>{{eventvs.userVS}}
                </div>

                <div class="horizontal layout fieldsBox">
                    <div style="width: 100%;">
                        <fieldset>
                            <legend>${msg.pollFieldLegend}</legend>
                            <div>
                                <template repeat="{{optionvs in eventvs.fieldsEventVS}}">
                                    <div class="voteOption" style="width: 90%;margin: 15px auto 0px auto;
                                        font-size: 1.3em; font-weight: bold;">
                                        - {{optionvs.content}}
                                    </div>
                                </template>
                            </div>
                        </fieldset>
                        <div style="margin: 10px 0 0 0;">
                            <template if="{{'TERMINATED' == eventvs.state}}">
                                <button on-click="getResults">
                                    <i class="fa fa-bar-chart"></i> ${msg.getResultsLbl}
                                </button>
                            </template>
                        </div>
                    </div>
                    <eventvs-election-stats eventVSId="{{eventvs.id}}"></eventvs-election-stats>
                </div>
            </div>
            </div>
        </div>
        <eventvs-vote-confirm-dialog id="confirmOptionDialog"></eventvs-vote-confirm-dialog>
        <eventvs-admin-dialog id="eventVSAdminDialog"></eventvs-admin-dialog>
    </template>
    <script>
        Polymer({
            is:'eventvs-election',
            properties: {
                fabVisible:{type:Boolean, value:false},
                eventvs:{type:Object, value:{}, observer:'eventvsChanged'}
            },
            decodeBase64:function(base64EncodedString) {
                if(base64EncodedString == null) return null
                return decodeURIComponent(escape(window.atob(base64EncodedString)))
            },
            fireSignal:function() {
                this.fire('iron-signal', {name: "vs-innerpage", data: {caption:"${msg.pollLbl}"}});
            },
            eventvsChanged:function() {
                this.dateFinish = new Date(this.eventvs.dateFinish)
            },
            ready: function() {
                console.log(this.tagName + "- ready")
                this.$.confirmOptionDialog.addEventListener('optionconfirmed', function (e) {
                    this.submitVote()
                }.bind(this))
            },
            getDate:function(dateStamp) {
                return new Date(dateStamp).getDayWeekFormat()
            },
            getResults:function() {
                console.log("getResults")
                var fileURL = this.eventvs.accessControl.serverURL + "/backup/" + this.dateFinish.urlFormat() +
                        "/VOTING_EVENT_" + this.eventvs.accessControlEventVSId + ".zip"
                if(window['isClientToolConnected']) {
                    var operationVS = new OperationVS(Operation.FILE_FROM_URL)
                    operationVS.subject = '${msg.downloadingFileMsg}'
                    operationVS.documentURL = fileURL
                    operationVS.setCallback(function(appMessage) {
                        var appMessageJSON = toJSON(appMessage)
                        if(ResponseVS.SC_OK !== appMessageJSON.statusCode) alert(appMessageJSON.message)
                    }.bind(this))
                    VotingSystemClient.setMessage(operationVS)
                } else window.location.href = fileURL
            },
            back:function() {
                this.fire('iron-signal', {name: "eventvs-election-closed", data: null});
            }
        });
    </script>
</dom-module>